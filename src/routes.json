[{"path":"/database/psql/grouping-sets","content":"<h1 id=\"grouping-sets\">Grouping sets</h1>\n<p><code>GROUPING SETS</code> is used to include multiple grouping conditions in a single query. The same result could be achieved by combining multiple queries with <code>UNION ALL</code> however this would be inefficent. <code>GROUPING SETS</code> computes the result with a single pass over the data and so is more performant than individual queries.</p>\n<pre><code>SELECT gender, country\nFROM person \nGROUP BY \n    GROUPING SETS (\n      (gender, country),\n      (gender),\n      (country),\n      ()\n);</code></pre><p><code>GROUPING SETS</code> also supports composite columns, allowing for grouping based on the values in multiple columns. </p>\n<pre><code>SELECT gender, country\nFROM person \nGROUP BY \n    GROUPING SETS ((gender, country));</code></pre><h2 id=\"cube\">CUBE</h2>\n<p>The subclause <code>CUBE</code> is used to define all variations of grouping sets. The following examples will produce the same result.</p>\n<pre><code>SELECT gender, country, eye_colour\nFROM person \nGROUP BY CUBE(gender, country, eye_colour);</code></pre><pre><code>SELECT gender, country, eye_colour\nFROM person \nGROUP BY \n    GROUPING SETS (\n      (gender, country, eye_colour),\n      (gender, country),\n      (gender, eye_colour),\n      (country, eye_colour),\n      (gender),\n      (country),\n      (eye_colour),\n      ()\n);</code></pre><h2 id=\"rollup\">ROLLUP</h2>\n<p>The subclause <code>ROLLUP</code> is used to define subset of grouping set variations based on the order of the columns provided. The following examples will produce the same result.</p>\n<pre><code>SELECT gender, country, eye_colour\nFROM person \nGROUP BY ROLLUP(gender, country, eye_colour);</code></pre><pre><code>SELECT gender, country, eye_colour\nFROM person \nGROUP BY \n    GROUPING SETS (\n      (gender, country, eye_colour),\n      (gender, country),\n      (gender),\n      ()\n);</code></pre><h1 id=\"references\">References</h1>\n<p><a href=\"https://www.waitingforcode.com/sql/sql-grouping-sets-operator/read\">sql-grouping-sets-operator/waitingforcode</a>\n<a href=\"http://www.postgresqltutorial.com/postgresql-grouping-sets/\">postgresql-grouping-sets/postgresqltutorial</a>\n<a href=\"https://stackoverflow.com/questions/25274879/when-to-use-grouping-sets-cube-and-rollup\">When to use GROUPING SETS, CUBE and ROLLUP/stackoverflow</a>\n<a href=\"https://docs.snowflake.net/manuals/sql-reference/constructs/group-by-grouping-sets.html\">group-by-grouping-sets/snowflake</a>\n<a href=\"http://www.postgresqltutorial.com/postgresql-cube/\">postgresql-cube/postgresqltutorial</a>\n<a href=\"http://www.postgresqltutorial.com/postgresql-rollup/\">postgresql-rollup/postgresqltutorial</a></p>\n<p>|-/|Tags|-/|-psql,postgres,database,grouping-sets,cube,rollup-|-/|Tags|-/|</p>","pathSegments":["database","psql","grouping-sets"],"name":"Grouping Sets","tags":["psql","postgres","database","grouping-sets","cube","rollup"],"lastModified":"2019-10-23"},{"path":"/database/psql/returning-a-set-amount-of-results","content":"<h1 id=\"returning-a-set-amount-of-results\">Returning a Set Amount of Results</h1>\n<p>In psql the two ways to return a specific number of results</p>\n<p><code>limit</code> and <code>fetch</code></p>\n<h2 id=\"use-of-limit\">Use of Limit</h2>\n<p><code>SELECT * FROM table ORDER BY id LIMIT 100</code>\n<code>SELECT * FROM table ORDER BY id LIMIT 100 OFFSET 50</code></p>\n<h2 id=\"use-of-fetch\">Use of Fetch</h2>\n<p><code>SELECT * FROM table ORDER BY id FETCH NEXT 100 ROWS ONLY</code>\n<code>SELECT * FROM table ORDER BY id OFFSET 50 FETCH NEXT 100 ROWS ONLY</code></p>\n<h2 id=\"what-is-the-difference\">What is the difference</h2>\n<p>There is no performance difference between the two. The only difference is syntactic.</p>\n<h1 id=\"references\">References</h1>\n<p><a href=\"http://www.postgresqltutorial.com/postgresql-fetch/\">postgresql-fetch (http://www.postgresqltutorial.com)</a>\n<a href=\"https://www.postgresql.org/docs/10/sql-fetch.html\">sql-fetch (www.postgresql.org)</a>\n<a href=\"https://docs.snowflake.net/manuals/sql-reference/constructs/limit.html\">LIMIT / FETCH (docs.snowflake.net)</a></p>\n<p>|-/|Tags|-/|-psql,postgres,database,pagination,limit,fetch,offset-|-/|Tags|-/|</p>","pathSegments":["database","psql","returning-a-set-amount-of-results"],"name":"Returning A Set Amount Of Results","tags":["psql","postgres","database","pagination","limit","fetch","offset"],"lastModified":"2019-10-23"},{"path":"/database/psql/the-like-operator","content":"<h1 id=\"the-like-operator\">The LIKE operator</h1>\n<p>This operator performs queries using patterns to match against a range of results</p>\n<p><code>%</code> - matches any sequence of characters\n<code>_</code> - matches any single character</p>\n<p><code>SELECT * FROM table WHERE text LIKE &#39;_search_&#39;</code>\n<code>SELECT * FROM table WHERE text LIKE &#39;text-%&#39;</code></p>\n<h2 id=\"ilike\">ILIKE</h2>\n<p><code>ILIKE</code> can be used in the same way as <code>LIKE</code> only it match is case insensitive.</p>\n<p>|-/|Tags|-/|-psql,postgres,database,like,pattern,match-|-/|Tags|-/|</p>\n<h1 id=\"references\">References</h1>\n<p><a href=\"http://www.postgresqltutorial.com/postgresql-like/\">postgresql-like (http://www.postgresqltutorial.com/postgresql-like/)</a></p>","pathSegments":["database","psql","the-like-operator"],"name":"The Like Operator","tags":["psql","postgres","database","like","pattern","match"],"lastModified":"2019-10-23"},{"path":"/database/psql/window-functions","content":"<!-- TOC -->\n\n<ul>\n<li><a href=\"#window-functions\">Window Functions</a></li>\n</ul>\n<!-- /TOC -->\n\n\n<h1 id=\"window-functions\">Window Functions</h1>\n<p>|-/|Tags|-/|-psql,postgres,database,-|-/|Tags|-/|</p>","pathSegments":["database","psql","window-functions"],"name":"Window Functions","tags":["psql","postgres","database",""],"lastModified":"2019-10-23"}]
