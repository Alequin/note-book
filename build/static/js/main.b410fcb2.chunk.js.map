{"version":3,"sources":["../config/environment.js","../assets sync","components/blank-button.js","components/item-grid.js","shared-css.js","components/item-button.js","components/directory-button.js","components/file-button.js","route-explorer/route-explorer.js","utils/use-tags-query-string.js","utils/tag-string-to-list.js","utils/tag-delimeter.js","utils/tag-list-to-string.js","utils/use-active-tags.js","utils/tags-query-key.js","components/unstyled-link.js","components/button.js","components/tag.js","tag-explorer/search-tags.js","tag-explorer/tag-explorer.js","flash-cards/flash-cards.js","utils/all-tags.js","browse-tags/browse-tags.js","react-router.js","index.js","../assets/images.js","route-explorer/filter-routes-to-display.js","route-explorer/transform-to-displayable-items.js"],"names":["ROOT_DIR","get","concat","__dirname","isTestEnvironment","IS_TEST","isReactApp","process","title","newPath","_ref","forTests","standardPath","path","resolve","RAW_NOTES_DIRECTORY","RAW_FLASH_CARDS_DIRECTORY","ROUTES_JSON_FILE","ASSETS_DIRECTORY","IMAGES_JSON_FILE","FLASH_CARDS_JSON_FILE","module","exports","Object","freeze","webpackEmptyContext","req","e","Error","code","keys","id","BlankButton","styled","button","ItemGrid","section","lightGreyBorder","css","Button","ItemButton","name","onClick","image","src","alt","DirectoryButton","images","FileButton","to","CurrentRoute","currentRoute","stepCurrentRouteBackBy","CurrentRouteSection","map","pathSegment","index","p","RouteExplorer","useState","setCurrentRoute","addToCurrentRoute","newRouteSegment","resetToInitialRoute","amount","slice","useCurrentRoute","directoriesAndFilesToDisplay","transformToDisplayableItems","filterRoutesToDisplay","ROOTS","length","sortBy","isDirectory","key","useTagsQueryString","search","useLocation","useMemo","URLSearchParams","tagStringToList","tagString","split","tagListToString","tagList","join","useActiveTags","history","useHistory","tagsList","setTags","useCallback","newTags","push","addTag","tag","tagToAdd","trim","clearAllTags","removeTag","tagToRemove","filter","UnstyledLink","Link","TagButton","large","highlight","Tag","children","ActiveTags","tags","ActiveTagSection","TagInput","input","InlineTagButton","Divider","hr","SearchTags","tagInputText","setTagInputText","clearTagInputText","updateTagInputText","value","target","useTagsInput","tagsQueryString","browseTagsQueryString","type","onChange","on","Section","TagExplorer","routesWithMatchingTags","ROUTES","fileTags","every","includes","FlashCard","div","HideAnswerButton","ShowAnswerSection","FlashCards","randomElement","FLASH_CARDS_LIST","currentFlashCard","setCurrentFlashCard","nextRandomFlashCard","useCurrentFlashCard","shouldShowAnswer","setShouldShowAnswer","setShowAnswer","setHideAnswer","useShouldShowAnswer","dangerouslySetInnerHTML","__html","question","answer","allTags","flow","flatMap","uniq","identity","FlexBox","BrowseTags","tagQueryString","shouldHighlight","ReactRouter","exact","content","ReactDOM","render","document","getElementById","_require","imageName","foundImage","loadImage","isPathSegmentInRange","pathSegments","isRouteOnTheCurrentRoute","currentRouteSegment","segmentIndex","routes","require","uniqBy","directoryDepth","items"],"mappings":"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","file":"static/js/main.b410fcb2.chunk.js","sourcesContent":["var path = require(\"path\");\n\nvar _require = require(\"lodash\"),\n    get = _require.get;\n\nvar ROOT_DIR = \"\".concat(__dirname, \"/..\");\nvar isTestEnvironment = process.env.IS_TEST;\nvar isReactApp = process.title === \"browser\";\n\nvar newPath = function newPath(_ref) {\n  var forTests = _ref.forTests,\n      standardPath = _ref.standardPath;\n  return isTestEnvironment && forTests ? path.resolve(\"\".concat(ROOT_DIR, \"/\").concat(forTests)) : path.resolve(\"\".concat(ROOT_DIR, \"/\").concat(standardPath));\n};\n\nvar RAW_NOTES_DIRECTORY = newPath({\n  forTests: \"./mock-dirs/test-raw-notes\",\n  standardPath: \"./raw-notes\"\n});\nvar RAW_FLASH_CARDS_DIRECTORY = newPath({\n  forTests: \"./mock-dirs/test-raw-flash-cards\",\n  standardPath: \"./raw-flash-cards\"\n});\nvar ROUTES_JSON_FILE = newPath({\n  forTests: \"./mock-dirs/test-routes.json\",\n  standardPath: \"./src/routes.json\"\n});\nvar ASSETS_DIRECTORY = newPath({\n  forTests: \"./mock-dirs/test-assets\",\n  standardPath: \"./assets\"\n});\nvar IMAGES_JSON_FILE = newPath({\n  forTests: \"./mock-dirs/images.json\",\n  standardPath: \"./assets/images.json\"\n});\nvar FLASH_CARDS_JSON_FILE = newPath({\n  forTests: \"./mock-dirs/flash.json\",\n  standardPath: \"./src/flash-cards.json\"\n});\nmodule.exports = Object.freeze({\n  RAW_NOTES_DIRECTORY: RAW_NOTES_DIRECTORY,\n  RAW_FLASH_CARDS_DIRECTORY: RAW_FLASH_CARDS_DIRECTORY,\n  ROUTES_JSON_FILE: ROUTES_JSON_FILE,\n  ASSETS_DIRECTORY: ASSETS_DIRECTORY,\n  IMAGES_JSON_FILE: IMAGES_JSON_FILE,\n  FLASH_CARDS_JSON_FILE: FLASH_CARDS_JSON_FILE,\n  isReactApp: isReactApp\n});","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 184;","import styled from \"styled-components\";\n\nconst BlankButton = styled.button`\n  border: 0;\n  padding: 0;\n  background: transparent;\n`;\n\nexport default BlankButton;\n","import styled from \"styled-components\";\n\nconst ItemGrid = styled.section`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-column-gap: 2vw;\n  grid-row-gap: 2vw;\n`;\n\nexport default ItemGrid;\n","import { css } from \"styled-components\";\n\nexport const lightGreyBorder = css`\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  &:hover {\n    border: 1px solid rgba(0, 0, 0, 0.3);\n  }\n  &:active {\n    border: 1px solid rgba(0, 0, 0, 0.3);\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport BlankButton from \"./blank-button\";\nimport { lightGreyBorder } from \"../shared-css\";\n\nconst ItemButton = ({ name, onClick, image }) => (\n  <Button onClick={onClick}>\n    <img src={image} alt={name}></img>\n    <p>Name: {name}</p>\n  </Button>\n);\n\nconst Button = styled(BlankButton)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  width: 100%;\n  height: 100%;\n  padding: 0;\n  background: transparent;\n  font-size: 1rem;\n  ${lightGreyBorder};\n`;\n\nexport default ItemButton;\n","import React from \"react\";\nimport ItemButton from \"./item-button\";\n\nimport images from \"assets/images\";\n\nconst DirectoryButton = ({ name, onClick }) => (\n  <ItemButton name={name} onClick={onClick} image={images(\"folder\")} />\n);\n\nexport default DirectoryButton;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ItemButton from \"./item-button\";\n\nimport images from \"assets/images\";\n\nconst FileButton = ({ name, to }) => (\n  <Link to={to}>\n    <ItemButton name={name} image={images(\"file\")} />\n  </Link>\n);\n\nexport default FileButton;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport sortBy from \"lodash/sortBy\";\nimport BlankButton from \"../components/blank-button\";\nimport ItemGrid from \"../components/item-grid\";\nimport DirectoryButton from \"../components/directory-button\";\nimport FileButton from \"../components/file-button\";\nimport filterRoutesToDisplay from \"./filter-routes-to-display\";\nimport transformToDisplayableItems from \"./transform-to-displayable-items\";\n\nimport ROOTS from \"../routes.json\";\n\nconst useCurrentRoute = () => {\n  const [currentRoute, setCurrentRoute] = useState([]);\n\n  const addToCurrentRoute = newRouteSegment =>\n    setCurrentRoute([...currentRoute, newRouteSegment]);\n\n  const resetToInitialRoute = () => setCurrentRoute([]);\n  const stepCurrentRouteBackBy = amount =>\n    setCurrentRoute(currentRoute.slice(0, -amount));\n\n  return {\n    currentRoute,\n    addToCurrentRoute,\n    resetToInitialRoute,\n    stepCurrentRouteBackBy\n  };\n};\n\nconst RouteExplorer = () => {\n  const {\n    currentRoute,\n    addToCurrentRoute,\n    resetToInitialRoute,\n    stepCurrentRouteBackBy\n  } = useCurrentRoute();\n\n  const directoriesAndFilesToDisplay = transformToDisplayableItems(\n    filterRoutesToDisplay(currentRoute, ROOTS),\n    currentRoute.length\n  );\n\n  return (\n    <>\n      <button onClick={resetToInitialRoute}>Return to route directory</button>\n      <CurrentRoute\n        currentRoute={currentRoute}\n        stepCurrentRouteBackBy={stepCurrentRouteBackBy}\n      />\n      <ItemGrid>\n        {sortBy(\n          directoriesAndFilesToDisplay,\n          ({ isDirectory }) => !isDirectory\n        ).map(({ isDirectory, name, to }, index) =>\n          isDirectory ? (\n            <DirectoryButton\n              key={index + name}\n              name={name}\n              onClick={() => addToCurrentRoute(name)}\n            />\n          ) : (\n            <FileButton key={index + name} name={name} to={to} />\n          )\n        )}\n      </ItemGrid>\n    </>\n  );\n};\n\nconst CurrentRoute = ({ currentRoute, stepCurrentRouteBackBy }) => (\n  <CurrentRouteSection>\n    Current Path: /\n    {currentRoute.map((pathSegment, index) => (\n      <BlankButton onClick={() => stepCurrentRouteBackBy(-index)}>\n        {pathSegment}/\n      </BlankButton>\n    ))}\n  </CurrentRouteSection>\n);\n\nconst CurrentRouteSection = styled.p`\n  display: flex;\n  align-items: center;\n  font-size: 1rem;\n`;\n\nexport default RouteExplorer;\n","import { useMemo } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nconst TAGS_QUERY_KEY = \"tags\";\n\nconst useTagsQueryString = () => {\n  const { search } = useLocation();\n  return useMemo(() => new URLSearchParams(search).get(TAGS_QUERY_KEY), [\n    search\n  ]);\n};\n\nexport default useTagsQueryString;\n","import TAG_DELIMETER from \"./tag-delimeter\";\nconst tagStringToList = tagString =>\n  tagString ? tagString.split(TAG_DELIMETER) : [];\n\nexport default tagStringToList;\n","const TAG_DELIMETER = \"~\";\nexport default TAG_DELIMETER;\n","import TAG_DELIMETER from \"./tag-delimeter\";\nconst tagListToString = tagList => (tagList ? tagList.join(TAG_DELIMETER) : \"\");\nexport default tagListToString;\n","import { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useTagsQueryString from \"./use-tags-query-string\";\nimport tagStringToList from \"./tag-string-to-list\";\nimport tagListToString from \"./tag-list-to-string\";\nimport TAGS_QUERY_KEY from \"./tags-query-key\";\n\nconst useActiveTags = () => {\n  const history = useHistory();\n  const tagsList = tagStringToList(useTagsQueryString());\n\n  const setTags = useCallback(newTags => {\n    history.push({\n      search:\n        newTags.length > 0\n          ? `?${TAGS_QUERY_KEY}=${tagListToString(newTags)}`\n          : \"\"\n    });\n  });\n\n  const addTag = useCallback(\n    tag => {\n      const tagToAdd = tag.trim();\n      tagToAdd && setTags([...tagsList, tagToAdd]);\n    },\n    [tagsList, setTags]\n  );\n\n  const clearAllTags = useCallback(() => setTags([]), []);\n\n  const removeTag = useCallback(\n    tagToRemove => setTags(tagsList.filter(tag => tag !== tagToRemove)),\n    [tagsList, clearAllTags]\n  );\n\n  return {\n    tagsList,\n    addTag,\n    clearAllTags,\n    removeTag\n  };\n};\n\nexport default useActiveTags;\n","const TAGS_QUERY_KEY = \"tags\";\nexport default TAGS_QUERY_KEY;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst UnstyledLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport default UnstyledLink;\n","import styled from \"styled-components\";\nimport BlankButton from \"../components/blank-button\";\nimport { lightGreyBorder } from \"../shared-css\";\n\nconst TagButton = styled(BlankButton)`\n  display: block;\n  width: 100%;\n  font-size: 1rem;\n  padding: 0.5rem 0;\n  ${lightGreyBorder};\n`;\n\nexport default TagButton;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport BlankButton from \"./blank-button\";\n\nconst Tag = ({ children, onClick, large, highlight }) => (\n  <Button large={large} highlight={highlight} onClick={onClick}>\n    {highlight ? <strong>{children}</strong> : children}\n  </Button>\n);\n\nconst Button = styled(BlankButton)`\n  padding: 0.5rem;\n  margin: 0.1rem;\n  border: 1px solid black;\n\n  ${({ large }) =>\n    large &&\n    `\n    font-size: 1rem;\n    padding: 0.75rem;\n    margin: 0.3rem;\n  `}\n\n  ${({ highlight }) => highlight && \"text-decoration: underline\"}\n`;\n\nexport default Tag;\n","import React, { useState, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport UnstyledLink from \"../components/unstyled-link\";\nimport Button from \"../components/button\";\nimport Tag from \"../components/tag\";\nimport useTagsQueryString from \"../utils/use-tags-query-string\";\nimport TAGS_QUERY_KEY from \"../utils/tags-query-key\";\n\nconst useTagsInput = () => {\n  const [tagInputText, setTagInputText] = useState(\"\");\n\n  const clearTagInputText = useCallback(() => setTagInputText(\"\"), [\n    setTagInputText\n  ]);\n\n  const updateTagInputText = useCallback(\n    ({ target: { value } }) => setTagInputText(value),\n    [setTagInputText]\n  );\n\n  return {\n    tagInputText,\n    clearTagInputText,\n    updateTagInputText\n  };\n};\n\nconst SearchTags = ({ tagsList, addTag, clearAllTags, removeTag }) => {\n  const {\n    tagInputText,\n    clearTagInputText,\n    updateTagInputText\n  } = useTagsInput();\n\n  const tagsQueryString = useTagsQueryString();\n  const browseTagsQueryString = tagsQueryString\n    ? `?${TAGS_QUERY_KEY}=${tagsQueryString}`\n    : \"\";\n\n  return (\n    <>\n      <TagInput\n        type=\"search\"\n        value={tagInputText}\n        onChange={updateTagInputText}\n        on\n      />\n      <InlineTagButton\n        onClick={useCallback(() => {\n          addTag(tagInputText);\n          clearTagInputText();\n        }, [tagInputText, addTag])}\n      >\n        Add Tag\n      </InlineTagButton>\n      <UnstyledLink to={`browse-tags${browseTagsQueryString}`}>\n        <InlineTagButton>Browse Tags</InlineTagButton>\n      </UnstyledLink>\n      <Button onClick={clearAllTags}>Clear Tags</Button>\n      <ActiveTags tags={tagsList} removeTag={removeTag}></ActiveTags>\n      <Divider />\n    </>\n  );\n};\n\nconst ActiveTags = ({ tags, removeTag }) => (\n  <ActiveTagSection>\n    {tags.map((tag, index) => (\n      <Tag key={index + tag} onClick={() => removeTag(tag)}>\n        {tag}\n      </Tag>\n    ))}\n  </ActiveTagSection>\n);\n\nconst ActiveTagSection = styled.section`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst TagInput = styled.input`\n  display: block;\n  width: 100%;\n  margin: 1rem 0;\n  font-size: 1.2rem;\n  border: 1px solid black;\n`;\n\nconst InlineTagButton = styled(Button)`\n  display: inline;\n  width: 50%;\n`;\n\nconst Divider = styled.hr`\n  margin: 1rem 0;\n`;\n\nexport default SearchTags;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ItemGrid from \"../components/item-grid\";\nimport FileButton from \"../components/file-button\";\nimport useActiveTags from \"../utils/use-active-tags\";\nimport SearchTags from \"./search-tags\";\n\nimport ROUTES from \"../routes.json\";\n\nconst TagExplorer = () => {\n  const { tagsList, addTag, clearAllTags, removeTag } = useActiveTags();\n\n  const routesWithMatchingTags =\n    tagsList.length > 0\n      ? ROUTES.filter(({ tags: fileTags }) =>\n          tagsList.every(tag => fileTags.includes(tag))\n        )\n      : ROUTES;\n\n  return (\n    <Section>\n      <SearchTags\n        tagsList={tagsList}\n        addTag={addTag}\n        clearAllTags={clearAllTags}\n        removeTag={removeTag}\n      />\n      <ItemGrid>\n        {routesWithMatchingTags.map(({ name, path }) => (\n          <FileButton key={path} name={name} to={path} />\n        ))}\n      </ItemGrid>\n    </Section>\n  );\n};\n\nconst Section = styled.section`\n  margin: auto;\n  width: 90%;\n`;\n\nexport default TagExplorer;\n","import React, { useState, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport randomElement from \"als-random/element\";\nimport BlankButton from \"../components/blank-button\";\nimport { lightGreyBorder } from \"../shared-css\";\nimport FLASH_CARDS_LIST from \"../flash-cards.json\";\n\nconst useCurrentFlashCard = () => {\n  const [currentFlashCard, setCurrentFlashCard] = useState(\n    randomElement(FLASH_CARDS_LIST)\n  );\n\n  const nextRandomFlashCard = () =>\n    setCurrentFlashCard(randomElement(FLASH_CARDS_LIST));\n\n  return { currentFlashCard, nextRandomFlashCard };\n};\n\nconst useShouldShowAnswer = () => {\n  const [shouldShowAnswer, setShouldShowAnswer] = useState(false);\n\n  const setShowAnswer = useCallback(() => setShouldShowAnswer(true), []);\n  const setHideAnswer = useCallback(() => setShouldShowAnswer(false), []);\n\n  return { shouldShowAnswer, setShowAnswer, setHideAnswer };\n};\n\nconst FlashCards = () => {\n  const { currentFlashCard, nextRandomFlashCard } = useCurrentFlashCard();\n  const {\n    shouldShowAnswer,\n    setShowAnswer,\n    setHideAnswer\n  } = useShouldShowAnswer();\n\n  return (\n    <FlashCard>\n      <Section\n        dangerouslySetInnerHTML={{ __html: currentFlashCard.question }}\n      />\n      <Section>\n        {shouldShowAnswer ? (\n          <>\n            <HideAnswerButton onClick={setHideAnswer}>\n              Hide Answer\n            </HideAnswerButton>\n            <div\n              dangerouslySetInnerHTML={{ __html: currentFlashCard.answer }}\n            />\n          </>\n        ) : (\n          <ShowAnswerSection onClick={setShowAnswer}>\n            <strong>Show Answer</strong>\n          </ShowAnswerSection>\n        )}\n      </Section>\n    </FlashCard>\n  );\n};\n\nconst FlashCard = styled.div`\n  display: flex;\n  text-align: center;\n  flex-direction: column;\n  justify-content: space-around;\n`;\n\nconst Section = styled.section`\n  margin: 2rem;\n`;\n\nconst HideAnswerButton = styled(BlankButton)`\n  ${lightGreyBorder};\n  padding: 0.5rem;\n`;\n\nconst ShowAnswerSection = styled(BlankButton)`\n  display: flex;\n  width: 90%;\n  height: 8.2rem;\n  margin: auto;\n  justify-content: center;\n  align-items: center;\n  font-size: 1rem;\n  ${lightGreyBorder};\n`;\n\nexport default FlashCards;\n","import { flatMap, uniq, sortBy, identity, flow } from \"lodash\";\nimport ROUTES from \"../routes.json\";\n\nconst getAllTags = () => flatMap(ROUTES, ({ tags }) => tags);\nconst removeDuplicateTags = tags => uniq(tags);\nconst removeInvalidTags = tags => tags.filter(identity);\nconst sortAlphabetically = tags => sortBy(tags, identity);\n\nconst allTags = flow(\n  getAllTags,\n  removeDuplicateTags,\n  removeInvalidTags,\n  sortAlphabetically\n);\n\nexport default allTags;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Tag from \"../components/tag\";\nimport UnstyledLink from \"../components/unstyled-link\";\nimport Button from \"../components/button\";\nimport allTags from \"../utils/all-tags\";\nimport useActiveTags from \"../utils/use-active-tags\";\nimport TAG_QUERY_KEY from \"../utils/tags-query-key\";\nimport tagListToString from \"../utils/tag-list-to-string\";\n\nconst BrowseTags = () => {\n  const { tagsList, addTag, removeTag } = useActiveTags();\n  const tagQueryString =\n    tagsList.length > 0 ? `?${TAG_QUERY_KEY}=${tagListToString(tagsList)}` : \"\";\n\n  return (\n    <Section>\n      <UnstyledLink to={`tag-explorer${tagQueryString}`}>\n        <Button>Search with selected tags</Button>\n      </UnstyledLink>\n      <FlexBox>\n        {allTags().map((tag, index) => {\n          const shouldHighlight = tagsList.includes(tag);\n          return (\n            <Tag\n              key={index + tag}\n              large\n              highlight={shouldHighlight}\n              onClick={() => (shouldHighlight ? removeTag(tag) : addTag(tag))}\n            >\n              {tag}\n            </Tag>\n          );\n        })}\n      </FlexBox>\n    </Section>\n  );\n};\n\nconst Section = styled.div`\n  padding: 1rem;\n  width: 80%;\n  margin: auto;\n`;\n\nconst FlexBox = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nexport default BrowseTags;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport RouteExplorer from \"./route-explorer/route-explorer\";\n\nimport TagExplorer from \"./tag-explorer/tag-explorer\";\nimport FlashCards from \"./flash-cards/flash-cards\";\nimport BrowseTags from \"./browse-tags/browse-tags\";\n\nimport ROOTS from \"./routes.json\";\n\nconst ReactRouter = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/route-explorer\">\n        <RouteExplorer />\n      </Route>\n      <Route exact path=\"/tag-explorer\">\n        <TagExplorer />\n      </Route>\n      <Route exact path=\"/flash-cards\">\n        <FlashCards />\n      </Route>\n      <Route exact path=\"/browse-tags\">\n        <BrowseTags />\n      </Route>\n      {ROOTS.map(({ path, content }, index) => (\n        <Route key={index} exact path={path}>\n          <div dangerouslySetInnerHTML={{ __html: content }} />\n        </Route>\n      ))}\n      <Route path=\"*\">Route does not exist</Route>\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default ReactRouter;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactRouter from \"./react-router\";\n\nReactDOM.render(<ReactRouter />, document.getElementById(\"root\"));\n","var _require = require(\"../config/environment\"),\n    IMAGES_JSON_FILE = _require.IMAGES_JSON_FILE,\n    isReactApp = _require.isReactApp;\n\nmodule.exports = function (imageName) {\n  var foundImage = loadImage(imageName);\n  if (!foundImage) throw Error(\"No image by the name \".concat(imageName, \" exists\"));\n  return foundImage;\n};\n\nvar loadImage = function loadImage(imageName) {\n  return isReactApp ? require(\"./images.json\")[imageName] : require(IMAGES_JSON_FILE)[imageName];\n};","const filterRoutesToDisplay = (currentRoute, routes) =>\n  currentRoute.length <= 0\n    ? routes\n    : routes.filter(\n        ({ pathSegments }) =>\n          isPathSegmentInRange(currentRoute, pathSegments) &&\n          isRouteOnTheCurrentRoute(currentRoute, pathSegments)\n      );\n\nconst isPathSegmentInRange = (currentRoute, pathSegments) =>\n  currentRoute.length <= pathSegments.length;\n\nconst isRouteOnTheCurrentRoute = (currentRoute, pathSegments) =>\n  currentRoute.every(\n    (currentRouteSegment, segmentIndex) =>\n      currentRouteSegment === pathSegments[segmentIndex]\n  );\n\nmodule.exports = filterRoutesToDisplay;\n","const { uniqBy, flow } = require(\"lodash\");\n\nconst removeDuplicateItems = items => uniqBy(items, \"name\");\n\nconst transformToDisplayableItems = (routes, directoryDepth) =>\n  routes.map(({ name, pathSegments, path }) => {\n    const isDirectory = directoryDepth < pathSegments.length - 1;\n    return isDirectory\n      ? {\n          isDirectory,\n          name: pathSegments[directoryDepth]\n        }\n      : {\n          isDirectory,\n          name,\n          to: path\n        };\n  });\n\nmodule.exports = flow(\n  transformToDisplayableItems,\n  removeDuplicateItems\n);\n"],"sourceRoot":""}