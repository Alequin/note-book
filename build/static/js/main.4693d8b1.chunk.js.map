{"version":3,"sources":["components/unstyled-link.js","components/blank-button.js","shared-css.js","components/button.js","react-routes.js","home/home.js","components/item-grid.js","components/item-button.js","components/file-button.js","utils/use-tags-query-string.js","utils/tag-string-to-list.js","utils/tag-delimeter.js","utils/tag-list-to-string.js","utils/use-active-tags.js","utils/tags-query-key.js","components/tag.js","tag-explorer/search-tags.js","tag-explorer/tag-explorer.js","flash-cards/flash-cards.js","components/directory-button.js","route-explorer/route-explorer.js","utils/all-tags.js","browse-tags/browse-tags.js","react-router.js","index.js","../assets/images.js","route-explorer/filter-routes-to-display.js","route-explorer/transform-to-displayable-items.js","../config/environment.js","../assets sync"],"names":["UnstyledLink","styled","Link","BlankButton","button","lightGreyBorder","css","TagButton","newRoute","route","REACT_ROUTES","Object","freeze","baseRoute","flashCards","tagExplorer","browseTags","routeExplorer","HomePageButton","to","children","BigLink","BigButton","FlexBox","div","Button","Home","ItemGrid","section","ItemButton","name","onClick","image","src","alt","FileButton","images","useTagsQueryString","search","useLocation","useMemo","URLSearchParams","get","tagStringToList","tagString","split","tagListToString","tagList","join","useActiveTags","history","useHistory","tagsList","setTags","useCallback","newTags","push","length","addTag","tag","tagToAdd","trim","clearAllTags","removeTag","tagToRemove","filter","large","highlight","Tag","ActiveTags","tags","ActiveTagSection","map","index","key","TagInput","input","InlineTagButton","Divider","hr","SearchTags","useState","tagInputText","setTagInputText","clearTagInputText","updateTagInputText","value","target","useTagsInput","tagsQueryString","browseTagsQueryString","type","onChange","on","Section","TagExplorer","routesWithMatchingTags","ROUTES","fileTags","every","includes","path","shuffledFlashCards","shuffle","FLASH_CARDS_LIST","slice","FlashCard","Header","h1","HideAnswerButton","ShowAnswerButton","FlashCards","randomElement","currentFlashCard","setCurrentFlashCard","nextRandomFlashCard","nextFlashCard","pop","isEmpty","useCurrentFlashCard","shouldShowAnswer","setShouldShowAnswer","setShowAnswer","setHideAnswer","useShouldShowAnswer","over","dangerouslySetInnerHTML","__html","question","answer","DirectoryButton","CurrentRoute","currentRoute","stepCurrentRouteBackBy","CurrentRouteSection","pathSegment","p","RouteExplorer","setCurrentRoute","addToCurrentRoute","newRouteSegment","resetToInitialRoute","amount","useCurrentRoute","directoriesAndFilesToDisplay","transformToDisplayableItems","filterRoutesToDisplay","sortBy","isDirectory","allTags","flow","flatMap","uniq","identity","BrowseTags","tagQueryString","shouldHighlight","GlobalStyle","createGlobalStyle","RouteWithReturnButton","LayoutWrapper","RouteContent","BottomBar","FullLengthLink","BadRoutePage","JSON","stringify","ReactRouter","exact","content","ReactDOM","render","document","getElementById","_require","IMAGES_JSON_FILE","isReactApp","module","exports","imageName","foundImage","loadImage","Error","concat","isPathSegmentInRange","pathSegments","isRouteOnTheCurrentRoute","currentRouteSegment","segmentIndex","routes","require","uniqBy","directoryDepth","items","ROOT_DIR","__dirname","isTestEnvironment","IS_TEST","process","title","newPath","_ref","forTests","standardPath","resolve","RAW_NOTES_DIRECTORY","RAW_FLASH_CARDS_DIRECTORY","ROUTES_JSON_FILE","ASSETS_DIRECTORY","FLASH_CARDS_JSON_FILE","webpackEmptyContext","req","e","code","keys","id"],"mappings":"ynsBAGA,IAIeA,EAJMC,YAAOC,IAAPD,CAAH,K,gICDlB,IAMeE,EANKF,IAAOG,OAAV,K,2OCAV,IAAMC,EAAkBC,YAAH,K,4JCE5B,IAQeC,EARGN,YAAOE,EAAPF,CAAH,IAKXI,GCPEG,EAAW,SAAAC,GAAK,gBAFH,cAEG,OAAoBA,IAU3BC,EARMC,OAAOC,OAAO,CACjCC,UALiB,aAMjBC,WAAYN,EAAS,gBACrBO,YAAaP,EAAS,iBACtBQ,WAAYR,EAAS,gBACrBS,cAAeT,EAAS,qB,mYCH1B,IAUMU,EAAiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,SAAP,OACrB,kBAACC,EAAD,CAASF,GAAIA,GACX,kBAACG,EAAD,KAAYF,KAIVG,EAAUtB,IAAOuB,IAAV,KAQPH,EAAUpB,YAAOD,EAAPC,CAAH,KAIPqB,EAAYrB,YAAOwB,EAAPxB,CAAH,KAKAyB,EAjCF,kBACX,kBAACH,EAAD,KACE,kBAAC,EAAD,CAAgBJ,GAAIT,EAAaI,YAAjC,eACA,kBAAC,EAAD,CAAgBK,GAAIT,EAAaK,aAAjC,gBACA,kBAAC,EAAD,CAAgBI,GAAIT,EAAaO,eAAjC,oB,2KCRJ,IAOeU,EAPE1B,IAAO2B,QAAV,K,2QCGd,IAOMH,EAASxB,YAAOE,EAAPF,CAAH,IAURI,GAGWwB,EApBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,MAAlB,OACjB,kBAACP,EAAD,CAAQM,QAASA,GACf,yBAAKE,IAAKD,EAAOE,IAAKJ,IACtB,oCAAUA,K,iBCICK,EANI,SAAC,GAAD,IAAGL,EAAH,EAAGA,KAAMX,EAAT,EAASA,GAAT,OACjB,kBAAC,IAAD,CAAMA,GAAIA,GACR,kBAAC,EAAD,CAAYW,KAAMA,EAAME,MAAOI,IAAO,Y,QCG3BC,EAPY,WAAO,IACxBC,EAAWC,cAAXD,OACR,OAAOE,mBAAQ,kBAAM,IAAIC,gBAAgBH,GAAQI,IAJ5B,UAIiD,CACpEJ,KCHWK,EAHS,SAAAC,GAAS,OAC/BA,EAAYA,EAAUC,MCFF,KDEyB,IEAhCC,EADS,SAAAC,GAAO,OAAKA,EAAUA,EAAQC,KDDhC,KCCsD,IC6C7DC,EAvCO,WACpB,IAAMC,EAAUC,cACVC,EAAWT,EAAgBN,KAE3BgB,EAAUC,uBACd,SAAAC,GACEL,EAAQM,KAAK,CACXlB,OACEiB,EAAQE,OAAS,EAAjB,WCfa,ODeb,YAC0BX,EAAgBS,IACtC,OAGV,CAACL,IAGGQ,EAASJ,uBACb,SAAAK,GACE,IAAMC,EAAWD,EAAIE,OACrBD,GAAYP,EAAQ,GAAD,mBAAKD,GAAL,CAAeQ,OAEpC,CAACR,EAAUC,IAGPS,EAAeR,uBAAY,kBAAMD,EAAQ,MAAK,CAACA,IAE/CU,EAAYT,uBAChB,SAAAU,GAAW,OAAIX,EAAQD,EAASa,QAAO,SAAAN,GAAG,OAAIA,IAAQK,QACtD,CAACZ,EAAUC,IAGb,MAAO,CACLD,WACAM,SACAI,eACAC,c,oKEtCJ,IAMMtC,EAASxB,YAAOE,EAAPF,CAAH,KAKR,qBAAGiE,OACE,4EAOL,qBAAGC,WAA6B,gCAGrBC,EAtBH,SAAC,GAAD,IAAGhD,EAAH,EAAGA,SAAUW,EAAb,EAAaA,QAASmC,EAAtB,EAAsBA,MAAOC,EAA7B,EAA6BA,UAA7B,OACV,kBAAC,EAAD,CAAQD,MAAOA,EAAOC,UAAWA,EAAWpC,QAASA,GAClDoC,EAAY,gCAAS/C,GAAqBA,I,4fCG/C,IAyDMiD,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMP,EAAT,EAASA,UAAT,OACjB,kBAACQ,EAAD,KACGD,EAAKE,KAAI,SAACb,EAAKc,GAAN,OACR,kBAAC,EAAD,CAAKC,IAAKD,EAAQd,EAAK5B,QAAS,kBAAMgC,EAAUJ,KAC7CA,QAMHY,EAAmBtE,IAAO2B,QAAV,KAMhB+C,EAAW1E,IAAO2E,MAAV,KAQRC,EAAkB5E,YAAOwB,EAAPxB,CAAH,KAKf6E,GAAU7E,IAAO8E,GAAV,KAIEC,GAvEI,SAAC,GAAmD,IAAjD5B,EAAgD,EAAhDA,SAAUM,EAAsC,EAAtCA,OAAQI,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAAgB,EAnBjD,WAAO,IAAD,EACekB,mBAAS,IADxB,mBAClBC,EADkB,KACJC,EADI,KAYzB,MAAO,CACLD,eACAE,kBAXwB9B,uBAAY,kBAAM6B,EAAgB,MAAK,CAC/DA,IAWAE,mBARyB/B,uBACzB,gBAAagC,EAAb,EAAGC,OAAUD,MAAb,OAA2BH,EAAgBG,KAC3C,CAACH,KAeCK,GAHFN,EAFkE,EAElEA,aACAE,EAHkE,EAGlEA,kBACAC,EAJkE,EAIlEA,mBAGII,EAAkBpD,IAClBqD,EAAwBD,EAAe,WFpCxB,OEoCwB,YACnBA,GACtB,GAEJ,OACE,oCACE,kBAACd,EAAD,CACEgB,KAAK,SACLL,MAAOJ,EACPU,SAAUP,EACVQ,IAAE,IAEJ,kBAAChB,EAAD,CACE9C,QAASuB,uBAAY,WACnBI,EAAOwB,GACPE,MACC,CAACF,EAAcxB,EAAQ0B,KAJ5B,WAQA,kBAAC,EAAD,CAAcjE,GAAE,UAAKT,EAAaM,YAAlB,OAA+B0E,IAC7C,kBAACb,EAAD,qBAEF,kBAAC,EAAD,CAAQ9C,QAAS+B,GAAjB,cACA,kBAAC,EAAD,CAAYQ,KAAMlB,EAAUW,UAAWA,IACvC,kBAACe,GAAD,Q,kHCnDN,IA+BMgB,GAAU7F,IAAO2B,QAAV,MAKEmE,GApCK,WAAO,IAAD,EAC8B9C,IAA9CG,EADgB,EAChBA,SAAUM,EADM,EACNA,OAAQI,EADF,EACEA,aAAcC,EADhB,EACgBA,UAElCiC,EACJ5C,EAASK,OAAS,EACdwC,GAAOhC,QAAO,gBAASiC,EAAT,EAAG5B,KAAH,OACZlB,EAAS+C,OAAM,SAAAxC,GAAG,OAAIuC,EAASE,SAASzC,SAE1CsC,GAEN,OACE,kBAACH,GAAD,KACE,kBAAC,GAAD,CACE1C,SAAUA,EACVM,OAAQA,EACRI,aAAcA,EACdC,UAAWA,IAEb,kBAAC,EAAD,KACGiC,EAAuBxB,KAAI,gBAAG1C,EAAH,EAAGA,KAAMuE,EAAT,EAASA,KAAT,OAC1B,kBAAC,EAAD,CACE3B,IAAK2B,EACLvE,KAAMA,EACNX,GAAE,UAAKT,EAAaG,WAAlB,OAA8BwF,W,8qBC1B5C,IAAMC,GAAqB,kBAAMC,mBAAQC,IAAkBC,MAAM,EAAG,KAkE9DC,GAAYzG,IAAOuB,IAAV,MAWTmF,GAAS1G,IAAO2G,GAAV,MAKNC,GAAmB5G,YAAOwB,EAAPxB,CAAH,MAIhB6G,GAAmB7G,YAAOwB,EAAPxB,CAAH,MAUP8G,GArEI,WAAO,IAAD,EAzBG,WAAO,IAAD,EACgB9B,mBAC9C+B,KAAcR,KAFgB,mBACzBS,EADyB,KACPC,EADO,KAehC,MAAO,CAAED,mBAAkBE,oBAVC3E,mBAAQ,WAClC,IAAM1B,EAAawF,KACnB,OAAO,WACL,IAAMc,EAAgBtG,EAAWuG,MAC7BC,mBAAQxG,IAAaA,EAAW0C,KAAX,MAAA1C,EAAU,YAASwF,OAE5CY,EAAoBE,MAErB,CAACF,KAa8CK,GAA1CN,EADe,EACfA,iBAAkBE,EADH,EACGA,oBADH,EAPG,WAAO,IAAD,EACgBlC,oBAAS,GADzB,mBACzBuC,EADyB,KACPC,EADO,KAIhC,MAAO,CAAED,mBAAkBE,cAFLpE,uBAAY,kBAAMmE,GAAoB,KAAO,IAEzBE,cADpBrE,uBAAY,kBAAMmE,GAAoB,KAAQ,KAUhEG,GAHFJ,EAHqB,EAGrBA,iBACAE,EAJqB,EAIrBA,cACAC,EALqB,EAKrBA,cAGF,OACE,kBAACjB,GAAD,KACE,kBAAC,EAAD,CAAQ3E,QAAS8F,gBAAK,CAACF,EAAeR,KAAtC,mBAGA,kBAACR,GAAD,iBACA,6BACEmB,wBAAyB,CAAEC,OAAQd,EAAiBe,YAEtD,iCACE,6BACA,kBAACrB,GAAD,eACCa,EACC,oCACE,kBAACX,GAAD,CAAkB9E,QAAS4F,GAA3B,eAGA,yBACEG,wBAAyB,CAAEC,OAAQd,EAAiBgB,WAIxD,kBAACnB,GAAD,CAAkB/E,QAAS2F,GACzB,mD,oBCxDGQ,GAJS,SAAC,GAAD,IAAGpG,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAAT,OACtB,kBAAC,EAAD,CAAYD,KAAMA,EAAMC,QAASA,EAASC,MAAOI,IAAO,a,+KCO1D,IA8DM+F,GAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,uBAAjB,OACnB,kBAACC,GAAD,uBAEGF,EAAa5D,KAAI,SAAC+D,EAAa9D,GAAd,OAChB,kBAAC,EAAD,CACEC,IAAK6D,EACLxG,QAAS,kBAAMsG,GAAwB5D,KAEtC8D,EAJH,UAUAD,GAAsBrI,IAAOuI,EAAV,MAMVC,GAhEO,WAAO,IAAD,EAlBJ,WAAO,IAAD,EACYxD,mBAAS,IADrB,mBACrBmD,EADqB,KACPM,EADO,KAU5B,MAAO,CACLN,eACAO,kBATwB,SAAAC,GAAe,OACvCF,EAAgB,GAAD,mBAAKN,GAAL,CAAmBQ,MASlCC,oBAP0B,kBAAMH,EAAgB,KAQhDL,uBAP6B,SAAAS,GAAM,OACnCJ,EAAgBN,EAAa3B,MAAM,GAAIqC,MAgBrCC,GAJFX,EAFwB,EAExBA,aACAO,EAHwB,EAGxBA,kBACAE,EAJwB,EAIxBA,oBACAR,EALwB,EAKxBA,uBAGIW,EAA+BC,KACnCC,KAAsBd,EAAcnC,IACpCmC,EAAa3E,QAGf,OACE,oCACE,4BAAQ1B,QAAS8G,GAAjB,6BACA,kBAAC,GAAD,CACET,aAAcA,EACdC,uBAAwBA,IAE1B,kBAAC,EAAD,KACGc,KACCH,GACA,qBAAGI,eACH5E,KAAI,WAA4BC,GAA5B,IAAG2E,EAAH,EAAGA,YAAatH,EAAhB,EAAgBA,KAAMX,EAAtB,EAAsBA,GAAtB,OACJiI,EACE,kBAAC,GAAD,CACE1E,IAAKD,EAAQ3C,EACbA,KAAMA,EACNC,QAAS,kBAAM4G,EAAkB7G,MAGnC,kBAAC,EAAD,CACE4C,IAAKD,EAAQ3C,EACbA,KAAMA,EACNX,GAAE,UAAKT,EAAaG,WAAlB,OAA8BM,WCnD/BkI,GAPCC,iBALG,kBAAMC,mBAAQtD,IAAQ,qBAAG3B,WAChB,SAAAA,GAAI,OAAIkF,gBAAKlF,MACf,SAAAA,GAAI,OAAIA,EAAKL,OAAOwF,gBACnB,SAAAnF,GAAI,OAAI6E,kBAAO7E,EAAMmF,gB,sQCIhD,IA6BM3D,GAAU7F,IAAOuB,IAAV,MAMPD,GAAUtB,IAAOuB,IAAV,MAMEkI,GAzCI,WAAO,IAAD,EACiBzG,IAAhCG,EADe,EACfA,SAAUM,EADK,EACLA,OAAQK,EADH,EACGA,UACpB4F,EACJvG,EAASK,OAAS,EAAlB,WRbmB,OQanB,YAA2CX,EAAgBM,IAAc,GAE3E,OACE,kBAAC,GAAD,KACE,kBAAC,EAAD,CAAcjC,GAAE,sBAAiBwI,IAC/B,kBAAC,EAAD,mCAEF,kBAAC,GAAD,KACGN,KAAU7E,KAAI,SAACb,EAAKc,GACnB,IAAMmF,EAAkBxG,EAASgD,SAASzC,GAC1C,OACE,kBAAC,EAAD,CACEe,IAAKD,EAAQd,EACbO,OAAK,EACLC,UAAWyF,EACX7H,QAAS,kBAAO6H,EAAkB7F,EAAUJ,GAAOD,EAAOC,KAEzDA,S,40BCff,IAAMkG,GAAcC,YAAH,MA4CXC,GAAwB,SAAC,GAAD,IAAG1D,EAAH,EAAGA,KAAMjF,EAAT,EAASA,SAAT,OAC5B,kBAAC,IAAD,CAAOiF,KAAMA,GACX,kBAAC2D,GAAD,KACE,kBAACC,GAAD,KAAe7I,GACf,kBAAC,GAAD,MACA,kBAAC8I,GAAD,KACE,kBAACC,GAAD,CAAgBhJ,GAAIT,EAAaG,WAC/B,kBAAC,EAAD,yBAOJuJ,GAAe,kBACnB,oCACE,oDACA,2BAAIC,KAAKC,UAAU/H,kBAIjByH,GAAgB/J,IAAOuB,IAAV,MAMbyI,GAAehK,IAAOuB,IAAV,MAKZsD,GAAU7E,IAAO8E,GAAV,MAKPmF,GAAYjK,IAAOuB,IAAV,MAOT2I,GAAiBlK,YAAOD,EAAPC,CAAH,MAILsK,GA/EK,kBAClB,kBAAC,IAAD,KACE,kBAACV,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOW,OAAK,EAACnE,KAAM3F,EAAaG,WAC9B,kBAAC,EAAD,OAEF,kBAAC,GAAD,CAAuBwF,KAAM3F,EAAaI,YACxC,kBAAC,GAAD,OAEF,kBAAC,GAAD,CAAuBuF,KAAM3F,EAAaK,aACxC,kBAAC,GAAD,OAEF,kBAAC,GAAD,CAAuBsF,KAAM3F,EAAaM,YACxC,kBAAC,GAAD,OAEF,kBAAC,GAAD,CAAuBqF,KAAM3F,EAAaO,eACxC,kBAAC,GAAD,OAEDgF,GAAOzB,KAAI,gBAAG6B,EAAH,EAAGA,KAAMoE,EAAT,EAASA,QAAT,OACV,kBAAC,GAAD,CAAuBpE,KAAI,UAAK3F,EAAaG,WAAlB,OAA8BwF,IACvD,6BAASyB,wBAAyB,CAAEC,OAAQ0C,SAGhD,kBAAC,GAAD,CAAuBpE,KAAK,KAC1B,kBAAC,GAAD,UCjDRqE,IAASC,OAAO,kBAAC,GAAD,MAAiBC,SAASC,eAAe,U,mBCJzD,IAAIC,EAAW,EAAQ,IACnBC,EAAmBD,EAASC,iBAC5BC,EAAaF,EAASE,WAE1BC,EAAOC,QAAU,SAAUC,GACzB,IAAIC,EAAaC,EAAUF,GAC3B,IAAKC,EAAY,MAAME,MAAM,wBAAwBC,OAAOJ,EAAW,YACvE,OAAOC,GAGT,IAAIC,EAAY,SAAmBF,GACjC,OAAOH,EAAa,EAAQ,IAAiBG,GAAa,MAAQJ,GAAkBI,K,m06BCXtF,IASMK,EAAuB,SAACpD,EAAcqD,GAAf,OAC3BrD,EAAa3E,QAAUgI,EAAahI,QAEhCiI,EAA2B,SAACtD,EAAcqD,GAAf,OAC/BrD,EAAajC,OACX,SAACwF,EAAqBC,GAAtB,OACED,IAAwBF,EAAaG,OAG3CX,EAAOC,QAlBuB,SAAC9C,EAAcyD,GAAf,OAC5BzD,EAAa3E,QAAU,EACnBoI,EACAA,EAAO5H,QACL,gBAAGwH,EAAH,EAAGA,aAAH,OACED,EAAqBpD,EAAcqD,IACnCC,EAAyBtD,EAAcqD,Q,yBCNxBK,EAAQ,GAAzBC,E,EAAAA,OAAQzC,E,EAAAA,KAmBhB2B,EAAOC,QAAU5B,GAfmB,SAACuC,EAAQG,GAAT,OAClCH,EAAOrH,KAAI,YAAmC,IAAhC1C,EAA+B,EAA/BA,KAAM2J,EAAyB,EAAzBA,aAAcpF,EAAW,EAAXA,KAC1B+C,EAAc4C,EAAiBP,EAAahI,OAAS,EAC3D,OAAO2F,EACH,CACEA,cACAtH,KAAM2J,EAAaO,IAErB,CACE5C,cACAtH,OACAX,GAAIkF,SAbe,SAAA4F,GAAK,OAAIF,EAAOE,EAAO,Y,yDCFpD,oBAAW,EAAQ,IAKfC,GAHW,EAAQ,GACJxJ,IAEJ,GAAG6I,OAAOY,EAAW,QAChCC,EAAoB,qDAAYC,QAChCrB,EAA+B,YAAlBsB,EAAQC,MAErBC,EAAU,SAAiBC,GAC7B,IAAIC,EAAWD,EAAKC,SAChBC,EAAeF,EAAKE,aACxB,OAAOP,GAAqBM,EAAWrG,EAAKuG,QAAQ,GAAGrB,OAAOW,EAAU,KAAKX,OAAOmB,IAAarG,EAAKuG,QAAQ,GAAGrB,OAAOW,EAAU,KAAKX,OAAOoB,KAG5IE,EAAsBL,EAAQ,CAChCE,SAAU,6BACVC,aAAc,gBAEZG,EAA4BN,EAAQ,CACtCE,SAAU,mCACVC,aAAc,sBAEZI,EAAmBP,EAAQ,CAC7BE,SAAU,+BACVC,aAAc,sBAEZK,EAAmBR,EAAQ,CAC7BE,SAAU,0BACVC,aAAc,aAEZ5B,EAAmByB,EAAQ,CAC7BE,SAAU,0BACVC,aAAc,yBAEZM,EAAwBT,EAAQ,CAClCE,SAAU,yBACVC,aAAc,2BAEhB1B,EAAOC,QAAUvK,OAAOC,OAAO,CAC7BiM,oBAAqBA,EACrBC,0BAA2BA,EAC3BC,iBAAkBA,EAClBC,iBAAkBA,EAClBjC,iBAAkBA,EAClBkC,sBAAuBA,EACvBjC,WAAYA,M,uvGC9Cd,SAASkC,EAAoBC,GAC5B,IAAIC,EAAI,IAAI9B,MAAM,uBAAyB6B,EAAM,KAEjD,MADAC,EAAEC,KAAO,mBACHD,EAEPF,EAAoBI,KAAO,WAAa,MAAO,IAC/CJ,EAAoBN,QAAUM,EAC9BjC,EAAOC,QAAUgC,EACjBA,EAAoBK,GAAK,K","file":"static/js/main.4693d8b1.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UnstyledLink = styled(Link)`\r\n  text-decoration: none;\r\n`;\r\n\r\nexport default UnstyledLink;\r\n","import styled from \"styled-components\";\r\n\r\nconst BlankButton = styled.button`\r\n  border: 0;\r\n  padding: 0;\r\n  background: transparent;\r\n`;\r\n\r\nexport default BlankButton;\r\n","import { css } from \"styled-components\";\r\n\r\nexport const lightGreyBorder = css`\r\n  border: 1px solid rgba(0, 0, 0, 0.1);\r\n  &:hover {\r\n    border: 1px solid rgba(0, 0, 0, 0.3);\r\n  }\r\n  &:active {\r\n    border: 1px solid rgba(0, 0, 0, 0.3);\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport BlankButton from \"../components/blank-button\";\r\nimport { lightGreyBorder } from \"../shared-css\";\r\n\r\nconst TagButton = styled(BlankButton)`\r\n  display: block;\r\n  width: 100%;\r\n  font-size: 1rem;\r\n  padding: 0.5rem 0;\r\n  ${lightGreyBorder};\r\n`;\r\n\r\nexport default TagButton;\r\n","const BASE_ROUTE = \"/note-book\";\r\n\r\nconst newRoute = route => `${BASE_ROUTE}${route}`;\r\n\r\nconst REACT_ROUTES = Object.freeze({\r\n  baseRoute: BASE_ROUTE,\r\n  flashCards: newRoute(\"/flash-cards\"),\r\n  tagExplorer: newRoute(\"/tag-explorer\"),\r\n  browseTags: newRoute(\"/browse-tags\"),\r\n  routeExplorer: newRoute(\"/route-explorer\")\r\n});\r\n\r\nexport default REACT_ROUTES;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport UnstyledLink from \"../components/unstyled-link\";\r\nimport Button from \"../components/button\";\r\nimport REACT_ROUTES from \"../react-routes\";\r\n\r\nconst Home = () => (\r\n  <FlexBox>\r\n    <HomePageButton to={REACT_ROUTES.flashCards}>Flash Cards</HomePageButton>\r\n    <HomePageButton to={REACT_ROUTES.tagExplorer}>Tag Explorer</HomePageButton>\r\n    <HomePageButton to={REACT_ROUTES.routeExplorer}>\r\n      Route Explorer\r\n    </HomePageButton>\r\n  </FlexBox>\r\n);\r\n\r\nconst HomePageButton = ({ to, children }) => (\r\n  <BigLink to={to}>\r\n    <BigButton>{children}</BigButton>\r\n  </BigLink>\r\n);\r\n\r\nconst FlexBox = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst BigLink = styled(UnstyledLink)`\r\n  margin: 2rem 0;\r\n`;\r\n\r\nconst BigButton = styled(Button)`\r\n  padding: 1rem;\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\n\r\nconst ItemGrid = styled.section`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-column-gap: 2vw;\r\n  grid-row-gap: 2vw;\r\n`;\r\n\r\nexport default ItemGrid;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BlankButton from \"./blank-button\";\r\nimport { lightGreyBorder } from \"../shared-css\";\r\n\r\nconst ItemButton = ({ name, onClick, image }) => (\r\n  <Button onClick={onClick}>\r\n    <img src={image} alt={name}></img>\r\n    <p>Name: {name}</p>\r\n  </Button>\r\n);\r\n\r\nconst Button = styled(BlankButton)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-align: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0;\r\n  background: transparent;\r\n  font-size: 1rem;\r\n  ${lightGreyBorder};\r\n`;\r\n\r\nexport default ItemButton;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ItemButton from \"./item-button\";\r\n\r\nimport images from \"assets/images\";\r\n\r\nconst FileButton = ({ name, to }) => (\r\n  <Link to={to}>\r\n    <ItemButton name={name} image={images(\"file\")} />\r\n  </Link>\r\n);\r\n\r\nexport default FileButton;\r\n","import { useMemo } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nconst TAGS_QUERY_KEY = \"tags\";\r\n\r\nconst useTagsQueryString = () => {\r\n  const { search } = useLocation();\r\n  return useMemo(() => new URLSearchParams(search).get(TAGS_QUERY_KEY), [\r\n    search\r\n  ]);\r\n};\r\n\r\nexport default useTagsQueryString;\r\n","import TAG_DELIMETER from \"./tag-delimeter\";\r\nconst tagStringToList = tagString =>\r\n  tagString ? tagString.split(TAG_DELIMETER) : [];\r\n\r\nexport default tagStringToList;\r\n","const TAG_DELIMETER = \"~\";\r\nexport default TAG_DELIMETER;\r\n","import TAG_DELIMETER from \"./tag-delimeter\";\r\nconst tagListToString = tagList => (tagList ? tagList.join(TAG_DELIMETER) : \"\");\r\nexport default tagListToString;\r\n","import { useCallback } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useTagsQueryString from \"./use-tags-query-string\";\r\nimport tagStringToList from \"./tag-string-to-list\";\r\nimport tagListToString from \"./tag-list-to-string\";\r\nimport TAGS_QUERY_KEY from \"./tags-query-key\";\r\n\r\nconst useActiveTags = () => {\r\n  const history = useHistory();\r\n  const tagsList = tagStringToList(useTagsQueryString());\r\n\r\n  const setTags = useCallback(\r\n    newTags => {\r\n      history.push({\r\n        search:\r\n          newTags.length > 0\r\n            ? `?${TAGS_QUERY_KEY}=${tagListToString(newTags)}`\r\n            : \"\"\r\n      });\r\n    },\r\n    [history]\r\n  );\r\n\r\n  const addTag = useCallback(\r\n    tag => {\r\n      const tagToAdd = tag.trim();\r\n      tagToAdd && setTags([...tagsList, tagToAdd]);\r\n    },\r\n    [tagsList, setTags]\r\n  );\r\n\r\n  const clearAllTags = useCallback(() => setTags([]), [setTags]);\r\n\r\n  const removeTag = useCallback(\r\n    tagToRemove => setTags(tagsList.filter(tag => tag !== tagToRemove)),\r\n    [tagsList, setTags]\r\n  );\r\n\r\n  return {\r\n    tagsList,\r\n    addTag,\r\n    clearAllTags,\r\n    removeTag\r\n  };\r\n};\r\n\r\nexport default useActiveTags;\r\n","const TAGS_QUERY_KEY = \"tags\";\r\nexport default TAGS_QUERY_KEY;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BlankButton from \"./blank-button\";\r\n\r\nconst Tag = ({ children, onClick, large, highlight }) => (\r\n  <Button large={large} highlight={highlight} onClick={onClick}>\r\n    {highlight ? <strong>{children}</strong> : children}\r\n  </Button>\r\n);\r\n\r\nconst Button = styled(BlankButton)`\r\n  padding: 0.5rem;\r\n  margin: 0.1rem;\r\n  border: 1px solid black;\r\n\r\n  ${({ large }) =>\r\n    large &&\r\n    `\r\n    font-size: 1rem;\r\n    padding: 0.75rem;\r\n    margin: 0.3rem;\r\n  `}\r\n\r\n  ${({ highlight }) => highlight && \"text-decoration: underline\"}\r\n`;\r\n\r\nexport default Tag;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport UnstyledLink from \"../components/unstyled-link\";\r\nimport Button from \"../components/button\";\r\nimport Tag from \"../components/tag\";\r\nimport useTagsQueryString from \"../utils/use-tags-query-string\";\r\nimport TAGS_QUERY_KEY from \"../utils/tags-query-key\";\r\nimport REACT_ROUTES from \"../react-routes\";\r\n\r\nconst useTagsInput = () => {\r\n  const [tagInputText, setTagInputText] = useState(\"\");\r\n\r\n  const clearTagInputText = useCallback(() => setTagInputText(\"\"), [\r\n    setTagInputText\r\n  ]);\r\n\r\n  const updateTagInputText = useCallback(\r\n    ({ target: { value } }) => setTagInputText(value),\r\n    [setTagInputText]\r\n  );\r\n\r\n  return {\r\n    tagInputText,\r\n    clearTagInputText,\r\n    updateTagInputText\r\n  };\r\n};\r\n\r\nconst SearchTags = ({ tagsList, addTag, clearAllTags, removeTag }) => {\r\n  const {\r\n    tagInputText,\r\n    clearTagInputText,\r\n    updateTagInputText\r\n  } = useTagsInput();\r\n\r\n  const tagsQueryString = useTagsQueryString();\r\n  const browseTagsQueryString = tagsQueryString\r\n    ? `?${TAGS_QUERY_KEY}=${tagsQueryString}`\r\n    : \"\";\r\n\r\n  return (\r\n    <>\r\n      <TagInput\r\n        type=\"search\"\r\n        value={tagInputText}\r\n        onChange={updateTagInputText}\r\n        on\r\n      />\r\n      <InlineTagButton\r\n        onClick={useCallback(() => {\r\n          addTag(tagInputText);\r\n          clearTagInputText();\r\n        }, [tagInputText, addTag, clearTagInputText])}\r\n      >\r\n        Add Tag\r\n      </InlineTagButton>\r\n      <UnstyledLink to={`${REACT_ROUTES.browseTags}${browseTagsQueryString}`}>\r\n        <InlineTagButton>Browse Tags</InlineTagButton>\r\n      </UnstyledLink>\r\n      <Button onClick={clearAllTags}>Clear Tags</Button>\r\n      <ActiveTags tags={tagsList} removeTag={removeTag}></ActiveTags>\r\n      <Divider />\r\n    </>\r\n  );\r\n};\r\n\r\nconst ActiveTags = ({ tags, removeTag }) => (\r\n  <ActiveTagSection>\r\n    {tags.map((tag, index) => (\r\n      <Tag key={index + tag} onClick={() => removeTag(tag)}>\r\n        {tag}\r\n      </Tag>\r\n    ))}\r\n  </ActiveTagSection>\r\n);\r\n\r\nconst ActiveTagSection = styled.section`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\n\r\nconst TagInput = styled.input`\r\n  display: block;\r\n  width: 100%;\r\n  margin: 1rem 0;\r\n  font-size: 1.2rem;\r\n  border: 1px solid black;\r\n`;\r\n\r\nconst InlineTagButton = styled(Button)`\r\n  display: inline;\r\n  width: 50%;\r\n`;\r\n\r\nconst Divider = styled.hr`\r\n  margin: 1rem 0;\r\n`;\r\n\r\nexport default SearchTags;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ItemGrid from \"../components/item-grid\";\r\nimport FileButton from \"../components/file-button\";\r\nimport useActiveTags from \"../utils/use-active-tags\";\r\nimport SearchTags from \"./search-tags\";\r\n\r\nimport REACT_ROUTES from \"../react-routes\";\r\nimport ROUTES from \"../routes.json\";\r\n\r\nconst TagExplorer = () => {\r\n  const { tagsList, addTag, clearAllTags, removeTag } = useActiveTags();\r\n\r\n  const routesWithMatchingTags =\r\n    tagsList.length > 0\r\n      ? ROUTES.filter(({ tags: fileTags }) =>\r\n          tagsList.every(tag => fileTags.includes(tag))\r\n        )\r\n      : ROUTES;\r\n\r\n  return (\r\n    <Section>\r\n      <SearchTags\r\n        tagsList={tagsList}\r\n        addTag={addTag}\r\n        clearAllTags={clearAllTags}\r\n        removeTag={removeTag}\r\n      />\r\n      <ItemGrid>\r\n        {routesWithMatchingTags.map(({ name, path }) => (\r\n          <FileButton\r\n            key={path}\r\n            name={name}\r\n            to={`${REACT_ROUTES.baseRoute}${path}`}\r\n          />\r\n        ))}\r\n      </ItemGrid>\r\n    </Section>\r\n  );\r\n};\r\n\r\nconst Section = styled.section`\r\n  margin: auto;\r\n  width: 90%;\r\n`;\r\n\r\nexport default TagExplorer;\r\n","import React, { useState, useCallback, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { over, shuffle, isEmpty } from \"lodash\";\r\nimport randomElement from \"als-random/element\";\r\nimport Button from \"../components/button\";\r\nimport FLASH_CARDS_LIST from \"../flash-cards.json\";\r\n\r\nconst shuffledFlashCards = () => shuffle(FLASH_CARDS_LIST).slice(0, 20);\r\n\r\nconst useCurrentFlashCard = () => {\r\n  const [currentFlashCard, setCurrentFlashCard] = useState(\r\n    randomElement(FLASH_CARDS_LIST)\r\n  );\r\n\r\n  const nextRandomFlashCard = useMemo(() => {\r\n    const flashCards = shuffledFlashCards();\r\n    return () => {\r\n      const nextFlashCard = flashCards.pop();\r\n      if (isEmpty(flashCards)) flashCards.push(...shuffledFlashCards());\r\n\r\n      setCurrentFlashCard(nextFlashCard);\r\n    };\r\n  }, [setCurrentFlashCard]);\r\n\r\n  return { currentFlashCard, nextRandomFlashCard };\r\n};\r\n\r\nconst useShouldShowAnswer = () => {\r\n  const [shouldShowAnswer, setShouldShowAnswer] = useState(false);\r\n  const setShowAnswer = useCallback(() => setShouldShowAnswer(true), []);\r\n  const setHideAnswer = useCallback(() => setShouldShowAnswer(false), []);\r\n  return { shouldShowAnswer, setShowAnswer, setHideAnswer };\r\n};\r\n\r\nconst FlashCards = () => {\r\n  const { currentFlashCard, nextRandomFlashCard } = useCurrentFlashCard();\r\n  const {\r\n    shouldShowAnswer,\r\n    setShowAnswer,\r\n    setHideAnswer\r\n  } = useShouldShowAnswer();\r\n\r\n  return (\r\n    <FlashCard>\r\n      <Button onClick={over([setHideAnswer, nextRandomFlashCard])}>\r\n        Next Flash Card\r\n      </Button>\r\n      <Header>Question</Header>\r\n      <section\r\n        dangerouslySetInnerHTML={{ __html: currentFlashCard.question }}\r\n      />\r\n      <section>\r\n        <hr />\r\n        <Header>Answer</Header>\r\n        {shouldShowAnswer ? (\r\n          <>\r\n            <HideAnswerButton onClick={setHideAnswer}>\r\n              Hide Answer\r\n            </HideAnswerButton>\r\n            <div\r\n              dangerouslySetInnerHTML={{ __html: currentFlashCard.answer }}\r\n            />\r\n          </>\r\n        ) : (\r\n          <ShowAnswerButton onClick={setShowAnswer}>\r\n            <strong>Show Answer</strong>\r\n          </ShowAnswerButton>\r\n        )}\r\n      </section>\r\n    </FlashCard>\r\n  );\r\n};\r\n\r\nconst FlashCard = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n\r\n  pre {\r\n    white-space: pre-wrap;\r\n    word-wrap: break-word;\r\n  }\r\n`;\r\n\r\nconst Header = styled.h1`\r\n  text-align: center;\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nconst HideAnswerButton = styled(Button)`\r\n  padding: 0.5rem;\r\n`;\r\n\r\nconst ShowAnswerButton = styled(Button)`\r\n  display: flex;\r\n  width: 90%;\r\n  height: 8.2rem;\r\n  margin: auto;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 1rem;\r\n`;\r\n\r\nexport default FlashCards;\r\n","import React from \"react\";\r\nimport ItemButton from \"./item-button\";\r\n\r\nimport images from \"assets/images\";\r\n\r\nconst DirectoryButton = ({ name, onClick }) => (\r\n  <ItemButton name={name} onClick={onClick} image={images(\"folder\")} />\r\n);\r\n\r\nexport default DirectoryButton;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport sortBy from \"lodash/sortBy\";\r\nimport BlankButton from \"../components/blank-button\";\r\nimport ItemGrid from \"../components/item-grid\";\r\nimport DirectoryButton from \"../components/directory-button\";\r\nimport FileButton from \"../components/file-button\";\r\nimport filterRoutesToDisplay from \"./filter-routes-to-display\";\r\nimport transformToDisplayableItems from \"./transform-to-displayable-items\";\r\n\r\nimport REACT_ROUTES from \"../react-routes\";\r\nimport ROUTES from \"../routes.json\";\r\n\r\nconst useCurrentRoute = () => {\r\n  const [currentRoute, setCurrentRoute] = useState([]);\r\n\r\n  const addToCurrentRoute = newRouteSegment =>\r\n    setCurrentRoute([...currentRoute, newRouteSegment]);\r\n\r\n  const resetToInitialRoute = () => setCurrentRoute([]);\r\n  const stepCurrentRouteBackBy = amount =>\r\n    setCurrentRoute(currentRoute.slice(0, -amount));\r\n\r\n  return {\r\n    currentRoute,\r\n    addToCurrentRoute,\r\n    resetToInitialRoute,\r\n    stepCurrentRouteBackBy\r\n  };\r\n};\r\n\r\nconst RouteExplorer = () => {\r\n  const {\r\n    currentRoute,\r\n    addToCurrentRoute,\r\n    resetToInitialRoute,\r\n    stepCurrentRouteBackBy\r\n  } = useCurrentRoute();\r\n\r\n  const directoriesAndFilesToDisplay = transformToDisplayableItems(\r\n    filterRoutesToDisplay(currentRoute, ROUTES),\r\n    currentRoute.length\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <button onClick={resetToInitialRoute}>Return to route directory</button>\r\n      <CurrentRoute\r\n        currentRoute={currentRoute}\r\n        stepCurrentRouteBackBy={stepCurrentRouteBackBy}\r\n      />\r\n      <ItemGrid>\r\n        {sortBy(\r\n          directoriesAndFilesToDisplay,\r\n          ({ isDirectory }) => !isDirectory\r\n        ).map(({ isDirectory, name, to }, index) =>\r\n          isDirectory ? (\r\n            <DirectoryButton\r\n              key={index + name}\r\n              name={name}\r\n              onClick={() => addToCurrentRoute(name)}\r\n            />\r\n          ) : (\r\n            <FileButton\r\n              key={index + name}\r\n              name={name}\r\n              to={`${REACT_ROUTES.baseRoute}${to}`}\r\n            />\r\n          )\r\n        )}\r\n      </ItemGrid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst CurrentRoute = ({ currentRoute, stepCurrentRouteBackBy }) => (\r\n  <CurrentRouteSection>\r\n    Current Path: /\r\n    {currentRoute.map((pathSegment, index) => (\r\n      <BlankButton\r\n        key={pathSegment}\r\n        onClick={() => stepCurrentRouteBackBy(-index)}\r\n      >\r\n        {pathSegment}/\r\n      </BlankButton>\r\n    ))}\r\n  </CurrentRouteSection>\r\n);\r\n\r\nconst CurrentRouteSection = styled.p`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1rem;\r\n`;\r\n\r\nexport default RouteExplorer;\r\n","import { flatMap, uniq, sortBy, identity, flow } from \"lodash\";\r\nimport ROUTES from \"../routes.json\";\r\n\r\nconst getAllTags = () => flatMap(ROUTES, ({ tags }) => tags);\r\nconst removeDuplicateTags = tags => uniq(tags);\r\nconst removeInvalidTags = tags => tags.filter(identity);\r\nconst sortAlphabetically = tags => sortBy(tags, identity);\r\n\r\nconst allTags = flow(\r\n  getAllTags,\r\n  removeDuplicateTags,\r\n  removeInvalidTags,\r\n  sortAlphabetically\r\n);\r\n\r\nexport default allTags;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Tag from \"../components/tag\";\r\nimport UnstyledLink from \"../components/unstyled-link\";\r\nimport Button from \"../components/button\";\r\nimport allTags from \"../utils/all-tags\";\r\nimport useActiveTags from \"../utils/use-active-tags\";\r\nimport TAG_QUERY_KEY from \"../utils/tags-query-key\";\r\nimport tagListToString from \"../utils/tag-list-to-string\";\r\n\r\nconst BrowseTags = () => {\r\n  const { tagsList, addTag, removeTag } = useActiveTags();\r\n  const tagQueryString =\r\n    tagsList.length > 0 ? `?${TAG_QUERY_KEY}=${tagListToString(tagsList)}` : \"\";\r\n\r\n  return (\r\n    <Section>\r\n      <UnstyledLink to={`tag-explorer${tagQueryString}`}>\r\n        <Button>Search with selected tags</Button>\r\n      </UnstyledLink>\r\n      <FlexBox>\r\n        {allTags().map((tag, index) => {\r\n          const shouldHighlight = tagsList.includes(tag);\r\n          return (\r\n            <Tag\r\n              key={index + tag}\r\n              large\r\n              highlight={shouldHighlight}\r\n              onClick={() => (shouldHighlight ? removeTag(tag) : addTag(tag))}\r\n            >\r\n              {tag}\r\n            </Tag>\r\n          );\r\n        })}\r\n      </FlexBox>\r\n    </Section>\r\n  );\r\n};\r\n\r\nconst Section = styled.div`\r\n  padding: 1rem;\r\n  width: 80%;\r\n  margin: auto;\r\n`;\r\n\r\nconst FlexBox = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default BrowseTags;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch, useLocation } from \"react-router-dom\";\r\nimport styled, { createGlobalStyle } from \"styled-components\";\r\nimport UnstyledLink from \"./components/unstyled-link\";\r\nimport Button from \"./components/button\";\r\n\r\nimport REACT_ROUTES from \"./react-routes\";\r\nimport Home from \"./home/home\";\r\nimport TagExplorer from \"./tag-explorer/tag-explorer\";\r\nimport FlashCards from \"./flash-cards/flash-cards\";\r\nimport RouteExplorer from \"./route-explorer/route-explorer\";\r\nimport BrowseTags from \"./browse-tags/browse-tags\";\r\n\r\nimport ROUTES from \"./routes.json\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html, body, #root {\r\n    height: 100%;\r\n    width: 100%;\r\n    margin: 0;\r\n  }\r\n  #root {\r\n    height: 98%;\r\n    width: 95%;\r\n    margin: auto;\r\n    padding: 1% 0 0 0;\r\n  }`;\r\n\r\nconst ReactRouter = () => (\r\n  <BrowserRouter>\r\n    <GlobalStyle />\r\n    <Switch>\r\n      <Route exact path={REACT_ROUTES.baseRoute}>\r\n        <Home />\r\n      </Route>\r\n      <RouteWithReturnButton path={REACT_ROUTES.flashCards}>\r\n        <FlashCards />\r\n      </RouteWithReturnButton>\r\n      <RouteWithReturnButton path={REACT_ROUTES.tagExplorer}>\r\n        <TagExplorer />\r\n      </RouteWithReturnButton>\r\n      <RouteWithReturnButton path={REACT_ROUTES.browseTags}>\r\n        <BrowseTags />\r\n      </RouteWithReturnButton>\r\n      <RouteWithReturnButton path={REACT_ROUTES.routeExplorer}>\r\n        <RouteExplorer />\r\n      </RouteWithReturnButton>\r\n      {ROUTES.map(({ path, content }) => (\r\n        <RouteWithReturnButton path={`${REACT_ROUTES.baseRoute}${path}`}>\r\n          <section dangerouslySetInnerHTML={{ __html: content }} />\r\n        </RouteWithReturnButton>\r\n      ))}\r\n      <RouteWithReturnButton path=\"*\">\r\n        <BadRoutePage />\r\n      </RouteWithReturnButton>\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nconst RouteWithReturnButton = ({ path, children }) => (\r\n  <Route path={path}>\r\n    <LayoutWrapper>\r\n      <RouteContent>{children}</RouteContent>\r\n      <Divider />\r\n      <BottomBar>\r\n        <FullLengthLink to={REACT_ROUTES.baseRoute}>\r\n          <Button>Return Home</Button>\r\n        </FullLengthLink>\r\n      </BottomBar>\r\n    </LayoutWrapper>\r\n  </Route>\r\n);\r\n\r\nconst BadRoutePage = () => (\r\n  <>\r\n    <p> Route does not exist</p>\r\n    <p>{JSON.stringify(useLocation())}</p>\r\n  </>\r\n);\r\n\r\nconst LayoutWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n`;\r\n\r\nconst RouteContent = styled.div`\r\n  height: 90%;\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst Divider = styled.hr`\r\n  width: 100%;\r\n  margin: 0;\r\n`;\r\n\r\nconst BottomBar = styled.div`\r\n  height: 10%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst FullLengthLink = styled(UnstyledLink)`\r\n  width: 100%;\r\n`;\r\n\r\nexport default ReactRouter;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport ReactRouter from \"./react-router\";\r\n\r\nReactDOM.render(<ReactRouter />, document.getElementById(\"root\"));\r\n","var _require = require(\"../config/environment\"),\n    IMAGES_JSON_FILE = _require.IMAGES_JSON_FILE,\n    isReactApp = _require.isReactApp;\n\nmodule.exports = function (imageName) {\n  var foundImage = loadImage(imageName);\n  if (!foundImage) throw Error(\"No image by the name \".concat(imageName, \" exists\"));\n  return foundImage;\n};\n\nvar loadImage = function loadImage(imageName) {\n  return isReactApp ? require(\"./images.json\")[imageName] : require(IMAGES_JSON_FILE)[imageName];\n};","const filterRoutesToDisplay = (currentRoute, routes) =>\r\n  currentRoute.length <= 0\r\n    ? routes\r\n    : routes.filter(\r\n        ({ pathSegments }) =>\r\n          isPathSegmentInRange(currentRoute, pathSegments) &&\r\n          isRouteOnTheCurrentRoute(currentRoute, pathSegments)\r\n      );\r\n\r\nconst isPathSegmentInRange = (currentRoute, pathSegments) =>\r\n  currentRoute.length <= pathSegments.length;\r\n\r\nconst isRouteOnTheCurrentRoute = (currentRoute, pathSegments) =>\r\n  currentRoute.every(\r\n    (currentRouteSegment, segmentIndex) =>\r\n      currentRouteSegment === pathSegments[segmentIndex]\r\n  );\r\n\r\nmodule.exports = filterRoutesToDisplay;\r\n","const { uniqBy, flow } = require(\"lodash\");\r\n\r\nconst removeDuplicateItems = items => uniqBy(items, \"name\");\r\n\r\nconst transformToDisplayableItems = (routes, directoryDepth) =>\r\n  routes.map(({ name, pathSegments, path }) => {\r\n    const isDirectory = directoryDepth < pathSegments.length - 1;\r\n    return isDirectory\r\n      ? {\r\n          isDirectory,\r\n          name: pathSegments[directoryDepth]\r\n        }\r\n      : {\r\n          isDirectory,\r\n          name,\r\n          to: path\r\n        };\r\n  });\r\n\r\nmodule.exports = flow(\r\n  transformToDisplayableItems,\r\n  removeDuplicateItems\r\n);\r\n","var path = require(\"path\");\n\nvar _require = require(\"lodash\"),\n    get = _require.get;\n\nvar ROOT_DIR = \"\".concat(__dirname, \"/..\");\nvar isTestEnvironment = process.env.IS_TEST;\nvar isReactApp = process.title === \"browser\";\n\nvar newPath = function newPath(_ref) {\n  var forTests = _ref.forTests,\n      standardPath = _ref.standardPath;\n  return isTestEnvironment && forTests ? path.resolve(\"\".concat(ROOT_DIR, \"/\").concat(forTests)) : path.resolve(\"\".concat(ROOT_DIR, \"/\").concat(standardPath));\n};\n\nvar RAW_NOTES_DIRECTORY = newPath({\n  forTests: \"./mock-dirs/test-raw-notes\",\n  standardPath: \"./raw-notes\"\n});\nvar RAW_FLASH_CARDS_DIRECTORY = newPath({\n  forTests: \"./mock-dirs/test-raw-flash-cards\",\n  standardPath: \"./raw-flash-cards\"\n});\nvar ROUTES_JSON_FILE = newPath({\n  forTests: \"./mock-dirs/test-routes.json\",\n  standardPath: \"./src/routes.json\"\n});\nvar ASSETS_DIRECTORY = newPath({\n  forTests: \"./mock-dirs/test-assets\",\n  standardPath: \"./assets\"\n});\nvar IMAGES_JSON_FILE = newPath({\n  forTests: \"./mock-dirs/images.json\",\n  standardPath: \"./assets/images.json\"\n});\nvar FLASH_CARDS_JSON_FILE = newPath({\n  forTests: \"./mock-dirs/flash.json\",\n  standardPath: \"./src/flash-cards.json\"\n});\nmodule.exports = Object.freeze({\n  RAW_NOTES_DIRECTORY: RAW_NOTES_DIRECTORY,\n  RAW_FLASH_CARDS_DIRECTORY: RAW_FLASH_CARDS_DIRECTORY,\n  ROUTES_JSON_FILE: ROUTES_JSON_FILE,\n  ASSETS_DIRECTORY: ASSETS_DIRECTORY,\n  IMAGES_JSON_FILE: IMAGES_JSON_FILE,\n  FLASH_CARDS_JSON_FILE: FLASH_CARDS_JSON_FILE,\n  isReactApp: isReactApp\n});","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 88;"],"sourceRoot":""}