[{"path":"/books/domain-drive-design-quickly/notes","content":"<h1 id=\"domain-drive-design-quickly-a-summary-of-eric-evans\"><a href=\"https://matfrs2.github.io/RS2/predavanja/literatura/Avram%20A,%20Marinescu%20F.%20-%20Domain%20Driven%20Design%20Quickly.pdf\">Domain Drive Design Quickly: A summary of Eric Evans</a></h1>\n<h2 id=\"chapter-1---what-is-domain-driven-design\">Chapter 1 - What Is Domain-Driven Design</h2>\n<blockquote>\n<p>When we begin a software project, we should focus on the\ndomain it is operating in. The entire purpose of the software is to\nenhance a specific domain. To be able to do that, the software\nhas to fit harmoniously with the domain it has been created for.\nOtherwise it will introduce strain into the domain, provoking\nmalfunction, damage, and even wreak chaos.</p>\n</blockquote>\n<blockquote>\n<p>How can we make the software fit harmoniously with the\ndomain? The best way to do it is to make software a reflection of\nthe domain. Software needs to incorporate the core concepts and\nelements of the domain, and to precisely realize the relationships\nbetween them. Software has to model the domain</p>\n</blockquote>\n<blockquote>\n<p>Somebody without knowledge of [of the given domain] should be able to learn\na lot just by reading the code in a domain model. This is\nessential. Software which does not have its roots planted deeply\ninto the domain will not react well to change over time.</p>\n</blockquote>\n<blockquote>\n<p>A domain is something\nof this world. We need to create\nan abstraction of the domain. We learn a lot about a domain\nwhile talking with the domain experts. But this raw knowledge is\nnot going to be easily transformed into software constructs,\nunless we build an abstraction of it.</p>\n</blockquote>\n<p>|-/|Tags|-/|-domain,design,sorftware,Eric Evans-|-/|Tags|-/|</p>","pathSegments":["books","domain-drive-design-quickly","notes"],"name":"Notes","tags":["domain","design","sorftware","Eric Evans"],"lastModified":"2020-08-04"},{"path":"/books/domain-driven-design-by-eric-evans/notes","content":"<h1 id=\"domain-driven-design-tackling-complexity-in-the-heart-of-software\"><a href=\"https://github.com/p0w34007/ebooks/blob/master/Eric%20Evans%202003%20-%20Domain-Driven%20Design%20-%20Tackling%20Complexity%20in%20the%20Heart%20of%20Software.pdf\">Domain-Driven Design: Tackling Complexity in the Heart of Software</a></h1>\n<h2 id=\"part-one---putting-the-domain-model-to-work\">Part one - Putting the domain model to work</h2>\n<blockquote>\n<p>[The] subject area to which [a] user applies [a] program is the domain of the software.</p>\n</blockquote>\n<blockquote>\n<p>A model is a simplification. It is an interpretation of reality that abstracts the aspects relevant to solving the problem at hand and ignores extraneous detail.</p>\n</blockquote>\n<blockquote>\n<p>A model is a selectively simplified and consciously structured form of knowledge. An appropriate model makes sense of information and focuses it on a problem.</p>\n</blockquote>\n<blockquote>\n<p>A <strong>domain model</strong> is not a particular diagram; it is the idea that the diagram conveys. A diagram can represent and communicate a model, as can carefully written code, as can an English sentence.</p>\n</blockquote>\n<h4 id=\"the-utility-of-a-model-in-domain-driven-design\">The Utility of a Model in Domain-Driven Design</h4>\n<blockquote>\n<p>The model and the heart of the design shape each other. It is the intimate link between the model and the implementation.</p>\n</blockquote>\n<blockquote>\n<p>The model is the backbone of a language used by all team members. Because of the binding of model and implementation, developers can talk about the program in this language.</p>\n</blockquote>\n<blockquote>\n<p>The model is distilled knowledge. The model is the team&#39;s agreed-upon way of structuring domain knowledge and distinguishing the elements of most interest.</p>\n</blockquote>\n<h4 id=\"chapter-one-crunching-knowledge\">Chapter One. Crunching Knowledge</h4>\n<p>|-/|Tags|-/|-domain,design,sorftware,Eric Evans-|-/|Tags|-/|</p>","pathSegments":["books","domain-driven-design-by-eric-evans","notes"],"name":"Notes","tags":["domain","design","sorftware","Eric Evans"],"lastModified":"2020-08-04"},{"path":"/database/psql/column-order","content":"<h1 id=\"column-order\">Column Order</h1>\n<p><a href=\"https://www.2ndquadrant.com/en/blog/on-rocks-and-sand/\">https://www.2ndquadrant.com/en/blog/on-rocks-and-sand/</a></p>\n<p>|-/|Tags|-/|-psql,postgres,database-|-/|Tags|-/|</p>","pathSegments":["database","psql","column-order"],"name":"Column Order","tags":["psql","postgres","database"],"lastModified":"2020-08-04"},{"path":"/database/psql/explain-analyze","content":"<h1 id=\"explain--analyze\">Explain / Analyze</h1>\n<ul>\n<li><code>EXPLAIN</code> is used in PSQL to view the execution plan to be used when for the given command</li>\n</ul>\n<pre><code>EXPLAIN SELECT * FROM my_table\nEXPLAIN DELETE FROM my_table\nEXPLAIN UPDATE my_table WHERE foo=&#39;bar&#39;</code></pre><ul>\n<li><code>EXPLAIN ANALYZE</code> returns the execution plan but also performs the command and provided details on actual performance</li>\n</ul>\n<pre><code>EXPLAIN ANALYZE SELECT * FROM my_table\nEXPLAIN ANALYZE DELETE FROM my_table\nEXPLAIN ANALYZE UPDATE my_table WHERE foo=&#39;bar&#39;</code></pre><h2 id=\"reading-an-execution-plan\">Reading an execution plan</h2>\n<p><strong>Example 1 Query</strong></p>\n<pre><code>EXPLAIN ANALYZE SELECT * FROM my_table WHERE age &lt; 23</code></pre><p><strong>Example 1 Execution Plan</strong></p>\n<pre><code>Seq Scan on my_table (cost=0.00..25.88 rows=423 width=36) (actual time=0.010..0.011 rows=1 loops=1)</code></pre><ul>\n<li><code>Seq Scan on my_table</code>: This identifys the action to be taken and the table it intends to work against</li>\n<li><code>(cost=0.00..25.88 rows=423 width=36)</code><ul>\n<li><code>cost=0.00..25.88</code>: The estimated cost (arbitrary units which conventionally mean disk page fetches) to run the action. <ul>\n<li>The first value (0.00 in this example) indicates cost required to start the action</li>\n<li>The second value (25.88 in this example) indicates cost to perform the action</li>\n</ul>\n</li>\n<li><code>rows=423</code>: The estimated number of rows to be output</li>\n<li><code>width=36</code>: The estimated size in bytes of a single row</li>\n</ul>\n</li>\n<li><code>(actual time=0.010..0.011 rows=1 loops=1)</code><ul>\n<li><code>time=0.010..0.011</code>: The time (in milliseconds) to execute the command</li>\n<li><code>rows=1</code>: The number of rows returned by the command</li>\n<li><code>loops=1</code>: The number of times the action repeated (if greater then 1 actual time and rows are an average of every execution)</li>\n</ul>\n</li>\n</ul>\n<hr>\n<p><strong>Example 2 Query</strong></p>\n<pre><code>EXPLAIN SELECT * FROM tenk1 WHERE unique1 &lt; 100 AND unique2 &gt; 9000;</code></pre><p><strong>Example 2 Execution Plan</strong></p>\n<pre><code>Bitmap Heap Scan on tenk1  (cost=25.08..60.21 rows=10 width=244)\n   Recheck Cond: ((unique1 &lt; 100) AND (unique2 &gt; 9000))\n   -&gt;  BitmapAnd  (cost=25.08..25.08 rows=10 width=0)\n         -&gt;  Bitmap Index Scan on tenk1_unique1  (cost=0.00..5.04 rows=101 width=0)\n               Index Cond: (unique1 &lt; 100)\n         -&gt;  Bitmap Index Scan on tenk1_unique2  (cost=0.00..19.78 rows=999 width=0)\n               Index Cond: (unique2 &gt; 9000)</code></pre><p>In this example multiple actions are required. The first actions to execute are those most deeply nested (there is no order guarantee for those on the same level). </p>\n<p>With nested execution plans the cost is cumulative for all sub actions. The costs for <code>Bitmap Index Scan on tenk1_unique1</code> and <code>Bitmap Index Scan on tenk1_unique2</code> represent the cost for that action only as these have no nested actions. However, the cost for <code>Bitmap Heap Scan on tenk1</code> includes the cost for the sub actions.  </p>\n<h2 id=\"considerations-with-execution-plans\">Considerations with execution plans</h2>\n<ul>\n<li>Costs do not include network transmission costs or I/O conversion costs </li>\n<li>The measurement overhead added by EXPLAIN ANALYZE can be significant</li>\n<li><code>EXPLAIN ANALYZE</code> will result in side effect when used with update and delete (don&#39;t accidentally delete an entire table)</li>\n</ul>\n<h1 id=\"references\">References</h1>\n<p><a href=\"https://thoughtbot.com/blog/reading-an-explain-analyze-query-plan\">Reading a Postgres EXPLAIN ANALYZE Query Plan/thoughtbot</a>\n<a href=\"https://www.postgresql.org/docs/9.3/sql-explain.html\">EXPLAIN/postgresql</a>\n<a href=\"https://www.postgresql.org/docs/9.4/using-explain.html\">Using EXPLAIN/postgresql</a></p>\n<p>|-/|Tags|-/|-psql,postgres,database,query-plan,explain,explain-analyze-|-/|Tags|-/|</p>","pathSegments":["database","psql","explain-analyze"],"name":"Explain Analyze","tags":["psql","postgres","database","query-plan","explain","explain-analyze"],"lastModified":"2020-08-04"},{"path":"/database/psql/grouping-sets","content":"<h1 id=\"grouping-sets\">Grouping sets</h1>\n<p><code>GROUPING SETS</code> is used to include multiple grouping conditions in a single query. The same result could be achieved by combining multiple queries with <code>UNION ALL</code> however this would be inefficent. <code>GROUPING SETS</code> computes the result with a single pass over the data and so is more performant than individual queries.</p>\n<pre><code>SELECT gender, country\nFROM person \nGROUP BY \n    GROUPING SETS (\n      (gender, country),\n      (gender),\n      (country),\n      ()\n);</code></pre><p><code>GROUPING SETS</code> also supports composite columns, allowing for grouping based on the values in multiple columns. </p>\n<pre><code>SELECT gender, country\nFROM person \nGROUP BY \n    GROUPING SETS ((gender, country));</code></pre><h2 id=\"cube\">CUBE</h2>\n<p>The subclause <code>CUBE</code> is used to define all variations of grouping sets. The following examples will produce the same result.</p>\n<pre><code>SELECT gender, country, eye_colour\nFROM person \nGROUP BY CUBE(gender, country, eye_colour);</code></pre><pre><code>SELECT gender, country, eye_colour\nFROM person \nGROUP BY \n    GROUPING SETS (\n      (gender, country, eye_colour),\n      (gender, country),\n      (gender, eye_colour),\n      (country, eye_colour),\n      (gender),\n      (country),\n      (eye_colour),\n      ()\n);</code></pre><h2 id=\"rollup\">ROLLUP</h2>\n<p>The subclause <code>ROLLUP</code> is used to define subset of grouping set variations based on the order of the columns provided. The following examples will produce the same result.</p>\n<pre><code>SELECT gender, country, eye_colour\nFROM person \nGROUP BY ROLLUP(gender, country, eye_colour);</code></pre><pre><code>SELECT gender, country, eye_colour\nFROM person \nGROUP BY \n    GROUPING SETS (\n      (gender, country, eye_colour),\n      (gender, country),\n      (gender),\n      ()\n);</code></pre><h1 id=\"references\">References</h1>\n<p><a href=\"https://www.waitingforcode.com/sql/sql-grouping-sets-operator/read\">sql-grouping-sets-operator/waitingforcode</a>\n<a href=\"http://www.postgresqltutorial.com/postgresql-grouping-sets/\">postgresql-grouping-sets/postgresqltutorial</a>\n<a href=\"https://stackoverflow.com/questions/25274879/when-to-use-grouping-sets-cube-and-rollup\">When to use GROUPING SETS, CUBE and ROLLUP/stackoverflow</a>\n<a href=\"https://docs.snowflake.net/manuals/sql-reference/constructs/group-by-grouping-sets.html\">group-by-grouping-sets/snowflake</a>\n<a href=\"http://www.postgresqltutorial.com/postgresql-cube/\">postgresql-cube/postgresqltutorial</a>\n<a href=\"http://www.postgresqltutorial.com/postgresql-rollup/\">postgresql-rollup/postgresqltutorial</a></p>\n<p>|-/|Tags|-/|-psql,postgres,database,grouping-sets,cube,rollup-|-/|Tags|-/|</p>","pathSegments":["database","psql","grouping-sets"],"name":"Grouping Sets","tags":["psql","postgres","database","grouping-sets","cube","rollup"],"lastModified":"2020-08-04"},{"path":"/database/psql/psql-drop-all-tables-in-schema","content":"<h1 id=\"dropping-all-tables-in-a-schema\">Dropping all tables in a schema</h1>\n<ul>\n<li>Build a number of drop table queries based on the table <code>pg_tables</code> and then execute them.</li>\n</ul>\n<pre><code>DO $$ DECLARE tablename RECORD;\n\nBEGIN\n\n  FOR tablename IN (\n    SELECT pg_tables.tablename\n    FROM pg_tables \n    WHERE schemaname = &#39;public&#39; -- Update the schema if needed\n  ) LOOP\n    EXECUTE &#39;drop table if exists &quot;&#39; || tablename || &#39;&quot; cascade;&#39;;\n  END LOOP;\n\nEND $$;</code></pre><ul>\n<li>Drop the schema that contains the tables of interest</li>\n</ul>\n<pre><code>DROP SCHEMA public CASCADE;\nCREATE SCHEMA public;\nGRANT ALL ON SCHEMA public TO postgres;\nGRANT ALL ON SCHEMA public TO public;\nCOMMENT ON SCHEMA public IS &#39;standard public schema&#39;;</code></pre><p>|-/|Tags|-/|-psql,postgres,database,table,tables,drop,delete,schema-|-/|Tags|-/|</p>\n<h1 id=\"references\">References</h1>\n<p><a href=\"https://stackoverflow.com/questions/3327312/how-can-i-drop-all-the-tables-in-a-postgresql-database\">StackOverflow: How can I drop all the tables in a PostgreSQL database?</a></p>","pathSegments":["database","psql","psql-drop-all-tables-in-schema"],"name":"Psql Drop All Tables In Schema","tags":["psql","postgres","database","table","tables","drop","delete","schema"],"lastModified":"2020-08-04"},{"path":"/database/psql/returning-a-set-amount-of-results","content":"<h1 id=\"returning-a-set-amount-of-results\">Returning a Set Amount of Results</h1>\n<p>In psql the two ways to return a specific number of results</p>\n<p><code>limit</code> and <code>fetch</code></p>\n<h2 id=\"use-of-limit\">Use of Limit</h2>\n<p><code>SELECT * FROM table ORDER BY id LIMIT 100</code>\n<code>SELECT * FROM table ORDER BY id LIMIT 100 OFFSET 50</code></p>\n<h2 id=\"use-of-fetch\">Use of Fetch</h2>\n<p><code>SELECT * FROM table ORDER BY id FETCH NEXT 100 ROWS ONLY</code>\n<code>SELECT * FROM table ORDER BY id OFFSET 50 FETCH NEXT 100 ROWS ONLY</code></p>\n<h2 id=\"what-is-the-difference\">What is the difference</h2>\n<p>There is no performance difference between the two. The only difference is syntactic.</p>\n<h1 id=\"references\">References</h1>\n<p><a href=\"http://www.postgresqltutorial.com/postgresql-fetch/\">postgresql-fetch (http://www.postgresqltutorial.com)</a>\n<a href=\"https://www.postgresql.org/docs/10/sql-fetch.html\">sql-fetch (www.postgresql.org)</a>\n<a href=\"https://docs.snowflake.net/manuals/sql-reference/constructs/limit.html\">LIMIT / FETCH (docs.snowflake.net)</a></p>\n<p>|-/|Tags|-/|-psql,postgres,database,pagination,limit,fetch,offset-|-/|Tags|-/|</p>","pathSegments":["database","psql","returning-a-set-amount-of-results"],"name":"Returning A Set Amount Of Results","tags":["psql","postgres","database","pagination","limit","fetch","offset"],"lastModified":"2020-08-04"},{"path":"/database/psql/reviewing-database-size","content":"<h1 id=\"database-size\">Database size</h1>\n<h2 id=\"table-size\">Table size</h2>\n<ul>\n<li>The size of a table</li>\n</ul>\n<pre><code>select pg_size_pretty (pg_relation_size(&#39;table_name&#39;));</code></pre><ul>\n<li>The size of a table including indexes and additional objects</li>\n</ul>\n<pre><code>SELECT\n    pg_size_pretty (\n        pg_total_relation_size (&#39;table_name&#39;)\n    );</code></pre><ul>\n<li>All tables sizes</li>\n</ul>\n<pre><code>SELECT\n    relname AS &quot;relation&quot;,\n    pg_size_pretty (\n        pg_total_relation_size (C.oid)\n    ) AS &quot;total_size&quot;\nFROM\n    pg_class C\nLEFT JOIN pg_namespace N ON (N.oid = C.relnamespace)\nWHERE\n    nspname NOT IN (\n        &#39;pg_catalog&#39;,\n        &#39;information_schema&#39;\n    )\nAND C.relkind &lt;&gt; &#39;i&#39;\nAND nspname !~ &#39;^pg_toast&#39;\nORDER BY\n    pg_total_relation_size (C.oid) DESC</code></pre><h2 id=\"database-size-1\">Database size</h2>\n<ul>\n<li>The size of a database</li>\n</ul>\n<pre><code>SELECT\n    pg_size_pretty (\n        pg_database_size (&#39;database_name&#39;)\n    );</code></pre><ul>\n<li>The size of all databases on a server</li>\n</ul>\n<pre><code>SELECT\n    pg_database.datname,\n    pg_size_pretty(pg_database_size(pg_database.datname)) AS size\n    FROM pg_database;</code></pre><h2 id=\"other-size-functions\">Other size functions</h2>\n<ul>\n<li>The size of Indexes associated with a table </li>\n</ul>\n<pre><code>SELECT pg_size_pretty (pg_indexes_size(&#39;table_name&#39;));</code></pre><ul>\n<li>Values size </li>\n</ul>\n<pre><code>SELECT pg_column_size(5::smallint);</code></pre><h1 id=\"references\">References</h1>\n<p><a href=\"http://www.postgresqltutorial.com/postgresql-database-indexes-table-size/\">How to Get Table, Database, Indexes, Tablespace, and Value Size in PostgreSQL/postgresqltutorial</a></p>\n<p>|-/|Tags|-/|-psql,postgres,database,-|-/|Tags|-/|</p>","pathSegments":["database","psql","reviewing-database-size"],"name":"Reviewing Database Size","tags":["psql","postgres","database",""],"lastModified":"2020-08-04"},{"path":"/database/psql/the-like-operator","content":"<h1 id=\"the-like-operator\">The LIKE operator</h1>\n<p>This operator performs queries using patterns to match against a range of results</p>\n<p><code>%</code> - matches any sequence of characters\n<code>_</code> - matches any single character</p>\n<p><code>SELECT * FROM table WHERE text LIKE &#39;_search_&#39;</code>\n<code>SELECT * FROM table WHERE text LIKE &#39;text-%&#39;</code></p>\n<h2 id=\"ilike\">ILIKE</h2>\n<p><code>ILIKE</code> can be used in the same way as <code>LIKE</code> only it match is case insensitive.</p>\n<p>|-/|Tags|-/|-psql,postgres,database,like,pattern,match-|-/|Tags|-/|</p>\n<h1 id=\"references\">References</h1>\n<p><a href=\"http://www.postgresqltutorial.com/postgresql-like/\">postgresql-like (http://www.postgresqltutorial.com/postgresql-like/)</a></p>","pathSegments":["database","psql","the-like-operator"],"name":"The Like Operator","tags":["psql","postgres","database","like","pattern","match"],"lastModified":"2020-08-04"},{"path":"/database/psql/unlogged-table","content":"<h1 id=\"unlogged-table\">UNLOGGED table</h1>\n<p>An <code>UNLOGGED</code> table is a PSQL feature which aims to improve write performance by not writting to the <code>WAL</code> (write-ahead log). The performance boost is however at the cost of potentially loosing data if there is a crash and being unable to use replica servers. </p>\n<h2 id=\"key-details-about-unlogged-tables\">Key details about UNLOGGED TABLES</h2>\n<ul>\n<li>Not crash safe</li>\n<li>UNLOGGED tables persist after the session ends</li>\n<li>Contents are not propagated to replica servers</li>\n<li>Improved write performance<ul>\n<li>The specific gain will vary and benchmarking should be done with your setup</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"common-reasons-to-use-an-unlogged-table\">Common reasons to use an UNLOGGED table</h2>\n<ul>\n<li>large data sets (e.g. computation) which will be only used few times</li>\n<li>dynamic data with expiration date e.g. user sessions</li>\n<li>volatile data which can be easily regenerated</li>\n</ul>\n<h2 id=\"examples\">Examples</h2>\n<ul>\n<li><strong>Create an unlogged table</strong></li>\n</ul>\n<pre><code>CREATE UNLOGGED TABLE table_name(\n  ...\n);</code></pre><ul>\n<li><strong>Make an existing table UNLOGGED</strong></li>\n</ul>\n<pre><code>ALTER TABLE table_name SET UNLOGGED</code></pre><ul>\n<li><strong>Make an existing table LOGGED</strong></li>\n</ul>\n<pre><code>ALTER TABLE table_name SET LOGGED</code></pre><ul>\n<li><strong>Find all UNLOGGED tables</strong></li>\n</ul>\n<pre><code>SELECT relname FROM pg_class WHERE relpersistence = &#39;u&#39;;</code></pre><h1 id=\"references\">References</h1>\n<ul>\n<li><a href=\"https://blog.nukomeet.com/faster-inserts-how-to-increase-postgresql-write-performance-24d76bd56f75\">Faster INSERTs: How to increase PostgreSQL write performance / blog.nukomeet.com</a></li>\n<li><a href=\"https://www.compose.com/articles/faster-performance-with-unlogged-tables-in-postgresql/\">Faster Performance with Unlogged Tables in PostgreSQL / https://www.compose.com/articles/faster-performance-with-unlogged-tables-in-postgresql/</a></li>\n</ul>\n<p>|-/|Tags|-/|-psql,postgres,database,unlogged,performance,wal-|-/|Tags|-/|</p>","pathSegments":["database","psql","unlogged-table"],"name":"Unlogged Table","tags":["psql","postgres","database","unlogged","performance","wal"],"lastModified":"2020-08-04"},{"path":"/database/psql/window-functions","content":"<!-- TOC -->\n\n<ul>\n<li><a href=\"#window-functions\">Window Functions</a></li>\n</ul>\n<!-- /TOC -->\n\n\n<h1 id=\"window-functions\">Window Functions</h1>\n<p>|-/|Tags|-/|-psql,postgres,database,-|-/|Tags|-/|</p>","pathSegments":["database","psql","window-functions"],"name":"Window Functions","tags":["psql","postgres","database",""],"lastModified":"2020-08-04"},{"path":"/useful-bash-knowledge/ssh-key-keeps-asking-for-password","content":"<p>In order to save your ssh password / passphrase...</p>\n<ul>\n<li>Run <code>eval $(ssh-agent)</code> to start the ssh agent</li>\n<li>Run <code>ssh-add ~/.ssh/id_rsa</code> and enter your password when prompted</li>\n</ul>\n<p>Source: <a href=\"https://stackoverflow.com/questions/21095054/ssh-key-still-asking-for-password-and-passphrase\">https://stackoverflow.com/questions/21095054/ssh-key-still-asking-for-password-and-passphrase</a></p>\n<p>|-/|Tags|-/|-ssh,password,passphrase-|-/|Tags|-/|</p>","pathSegments":["useful-bash-knowledge","ssh-key-keeps-asking-for-password"],"name":"Ssh Key Keeps Asking For Password","tags":["ssh","password","passphrase"],"lastModified":"2020-08-04"}]
